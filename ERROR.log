[08.21.2023 23:59:00 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 175, in bot
    await key()
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 229, in WHO_GET
    if i is not None: await i()
                      ^^^^^^^^^
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 197, in nickname
    await edit.execute(f'INSERT OR IGNORE INTO nicknames VALUES({self.peer,self.fromid,self.string_[2:]})')
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
           ^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: no such column: 'салени', 'агурец'

________________________



[08.22.2023 00:02:02 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 175, in bot
    await key()
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 229, in WHO_GET
    if i is not None: await i()
                      ^^^^^^^^^
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 197, in nickname
    await edit.execute(f'INSERT OR IGNORE INTO nicknames VALUES({self.peer,self.fromid,str(self.string_[2:])})')
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
           ^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: table nicknames has 3 columns but 1 values were supplied

________________________



[08.22.2023 00:08:46 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 175, in bot
    await key()
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 229, in WHO_GET
    if i is not None: await i()
                      ^^^^^^^^^
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 197, in nickname
    await edit.execute(f'INSERT OR IGNORE INTO nicknames VALUES({self.peer},{self.fromid},{str(self.string_[2:])})')
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
           ^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: no such column: 'салени', 'агурец'

________________________



[08.22.2023 00:08:47 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 175, in bot
    await key()
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 229, in WHO_GET
    if i is not None: await i()
                      ^^^^^^^^^
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 197, in nickname
    await edit.execute(f'INSERT OR IGNORE INTO nicknames VALUES({self.peer},{self.fromid},{str(self.string_[2:])})')
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
           ^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: no such column: 'салени', 'агурец'

________________________



[08.22.2023 17:32:49 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 175, in bot
    await key()
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 230, in WHO_GET
    if i is not None: await i()
                      ^^^^^^^^^
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 198, in nickname
    await edit.execute(f'INSERT OR IGNORE INTO nicknames VALUES({self.peer},{self.fromid},{" ".join(self.string_[2:])})')
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
           ^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: no such column: хуй

________________________



[08.22.2023 17:41:35 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 175, in bot
    await key()
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 230, in WHO_GET
    if i is not None: await i()
                      ^^^^^^^^^
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 198, in nickname
    await edit.execute(f'INSERT OR IGNORE INTO nicknames VALUES({self.peer},{self.fromid},{" ".join(self.string_[2:])})')
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
           ^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: no such column: хуй

________________________



[08.22.2023 17:45:45 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 175, in bot
    await key()
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 230, in WHO_GET
    if i is not None: await i()
                      ^^^^^^^^^
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 198, in nickname
    await edit.execute(f'INSERT OR IGNORE INTO nicknames VALUES({self.peer},{self.fromid},{" ".join(self.string_[2:])})')
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
           ^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: no such column: хуй

________________________



[08.22.2023 17:49:18 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 175, in bot
    await key()
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 230, in WHO_GET
    if i is not None: await i()
                      ^^^^^^^^^
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 198, in nickname
    await edit.execute(f'INSERT OR IGNORE INTO nicknames VALUES({self.peer},{self.fromid},'{" ".join(self.string_[2:])})'')
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
           ^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: no such column: хуй

________________________



[08.22.2023 17:51:33 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 175, in bot
    await key()
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 230, in WHO_GET
    if i is not None: await i()
                      ^^^^^^^^^
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 198, in nickname
    await edit.execute(f"INSERT OR IGNORE INTO nicknames VALUES({self.peer},{self.fromid},'{' '.join(self.string_[2:])})'")
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
           ^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: incomplete input

________________________



[08.22.2023 17:54:26 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 175, in bot
    await key()
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 230, in WHO_GET
    if i is not None: await i()
                      ^^^^^^^^^
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 198, in nickname
    await edit.execute(f"INSERT OR IGNORE INTO nicknames VALUES({self.peer},{self.fromid},{' '.join(self.string_[2:])})")
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
           ^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: no such column: хуй

________________________



[08.22.2023 17:57:11 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 175, in bot
    await key()
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 230, in WHO_GET
    if i is not None: await i()
                      ^^^^^^^^^
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 198, in nickname
    await edit.execute(f"INSERT OR IGNORE INTO nicknames VALUES({self.peer},{self.fromid},{str(' '.join(self.string_[2:]))})")
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
           ^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: no such column: хуй

________________________



[08.22.2023 18:01:24 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 175, in bot
    await key()
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 230, in WHO_GET
    if i is not None: await i()
                      ^^^^^^^^^
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 198, in nickname
    await edit.execute(f"INSERT OR IGNORE INTO nicknames VALUES({self.peer},{self.fromid},{str(' '.join(self.string_[2:]))})")
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
           ^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             ^^^^^^^^^^
sqlite3.OperationalError: no such column: хуй

________________________



[08.23.2023 11:14:58 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 164, in bot
    await send(msg)
  File "c:\k\project\PycharmProjects\bot2\online_tools.py", line 144, in send
    await msg.answer(message=data_msg.msg, attachment=data_msg.attachment, keyboard=data_msg.keyboard)
                                                      ^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'data_msg' has no attribute 'attachment'

________________________



[08.23.2023 11:15:36 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 164, in bot
    await send(msg)
  File "c:\k\project\PycharmProjects\bot2\online_tools.py", line 144, in send
    await msg.answer(message=data_msg.msg, attachment=data_msg.attachment, keyboard=data_msg.keyboard)
                                                      ^^^^^^^^^^^^^^^^^^^
AttributeError: type object 'data_msg' has no attribute 'attachment'

________________________



[08.23.2023 12:17:08 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 143, in bot
    if await MessageNotCommandRule.check():
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: MessageNotCommandRule.check() missing 2 required positional arguments: 'self' and 'm'

________________________



[08.23.2023 15:14:55 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 124, in bot
    Dictwords,w = []
    ^^^^^^^^^^^
ValueError: not enough values to unpack (expected 2, got 0)

________________________



[08.23.2023 15:15:00 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 124, in bot
    Dictwords,w = []
    ^^^^^^^^^^^
ValueError: not enough values to unpack (expected 2, got 0)

________________________



[08.23.2023 15:15:27 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 124, in bot
    Dictwords,w = []
    ^^^^^^^^^^^
ValueError: not enough values to unpack (expected 2, got 0)

________________________



[08.23.2023 15:15:34 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 124, in bot
    Dictwords,w = []
    ^^^^^^^^^^^
ValueError: not enough values to unpack (expected 2, got 0)

________________________



[08.23.2023 18:23:36 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 167, in bot
    if MessageNotCommandRule:#исправить
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\k\project\PycharmProjects\bot2\keyboards.py", line 73, in check_event_msg
    if self.pay_key_sep[0] is not None: await pay.get(self.pay_key_sep[0])()
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 97, in marry_control
    if info: await api_group.messages.send_message_event_answer(event_id=self.obj.event_id,
                                                                         ^^^^^^^^^^^^^^^^^
AttributeError: 'MessageMin' object has no attribute 'event_id'

________________________



[08.23.2023 18:28:58 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 167, in bot
    if MessageNotCommandRule:#исправить
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\k\project\PycharmProjects\bot2\keyboards.py", line 73, in check_event_msg
    if self.pay_key_sep[0] is not None: await pay.get(self.pay_key_sep[0])()
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\k\project\PycharmProjects\bot2\respond_who.py", line 97, in marry_control
    if info: await api_group.messages.send_message_event_answer(event_id=self.obj.event_id,
                                                                         ^^^^^^^^^^^^^^^^^
AttributeError: 'MessageMin' object has no attribute 'event_id'

________________________



[08.24.2023 16:00:14 | INFO]: 
________________________
Traceback (most recent call last):
  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 128, in bot_event
    TEXT = msg.text
           ^^^^^^^^
AttributeError: 'MessageNew' object has no attribute 'text'

________________________



2023-09-01T22:31:49.704062+0700 - ERROR - no such table: 2000000041
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 59, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000001E14284EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E1429154D0>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000001E142B71710>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000001E1429154D0>
    │    │            └ <function LoopWrapper.run_forever at 0x000001E1431B0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000001E144CE5490>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E1429154D0>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001E13E6A9760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001E13E1E13A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001E13C97F9C0>
    └ <Handle Task.task_wakeup(<Future finis... 2000000041')>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis... 2000000041')>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis... 2000000041')>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis... 2000000041')>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000001E144CE5890>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000001E144CE5AD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '0dbf3a25dd977374a291bb08dc8076116d61b695', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000001E14311F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101050, date=1693582554, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000001E14311C360>
                             └ <FromFuncHandler RoleCommand blocking=False rules=(<PrefixRoleRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101050, date=1693582554, deleted=None, ...
                 │    └ <function RoleCommand at 0x000001E144D7AF20>
                 └ <FromFuncHandler RoleCommand blocking=False rules=(<PrefixRoleRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\respond_who.py", line 245, in RoleCommand
    await ROLES(fromid=msg.from_id, peer=msg.peer_id, msg=msg.text, obj=msg).Check()
          │            │   │             │   │            │   │         └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101050, date=1693582554, deleted=None, ...
          │            │   │             │   │            │   └ '!ник мне салени агурец'
          │            │   │             │   │            └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101050, date=1693582554, deleted=None, ...
          │            │   │             │   └ 2000000041
          │            │   │             └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101050, date=1693582554, deleted=None, ...
          │            │   └ -190195384
          │            └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101050, date=1693582554, deleted=None, ...
          └ <class 'handlers.respond_who.ROLES'>

  File "c:\k\project\PycharmProjects\bot2\handlers\respond_who.py", line 207, in Check
    await self.name_builder()
          │    └ <function ROLES.name_builder at 0x000001E144D7AA20>
          └ <handlers.respond_who.ROLES object at 0x000001E142CA55D0>

  File "c:\k\project\PycharmProjects\bot2\handlers\respond_who.py", line 36, in name_builder
    self.comm = await DB_Manager('peers_roles.db', f"SELECT command FROM '{self.peer}'").get_one_col_list()
    │    │            └ <class 'tools.DB_Manager'>
    │    └ ''
    └ <handlers.respond_who.ROLES object at 0x000001E142CA55D0>

  File "c:\k\project\PycharmProjects\bot2\tools.py", line 163, in get_one_col_list
    edit = await (await self.cursor.execute(self.query)).fetchall()
                        │    │      │       │    └ "SELECT command FROM '2000000041'"
                        │    │      │       └ <tools.DB_Manager object at 0x000001E14518C250>
                        │    │      └ <function Cursor.execute at 0x000001E141A4B4C0>
                        │    └ <aiosqlite.cursor.Cursor object at 0x000001E14518F310>
                        └ <tools.DB_Manager object at 0x000001E14518C250>

  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
          │    │        │    │       │        │    └ []
          │    │        │    │       │        └ "SELECT command FROM '2000000041'"
          │    │        │    │       └ <method 'execute' of 'sqlite3.Cursor' objects>
          │    │        │    └ <sqlite3.Cursor object at 0x000001E144E02F40>
          │    │        └ <aiosqlite.cursor.Cursor object at 0x000001E14518F310>
          │    └ <function Cursor._execute at 0x000001E141A4B420>
          └ <aiosqlite.cursor.Cursor object at 0x000001E14518F310>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
                 │    │     │        │    │       └ {}
                 │    │     │        │    └ ("SELECT command FROM '2000000041'", [])
                 │    │     │        └ <built-in method execute of sqlite3.Cursor object at 0x000001E144E02F40>
                 │    │     └ <function Connection._execute at 0x000001E1425385E0>
                 │    └ <Connection(Thread-200, started 4352)>
                 └ <aiosqlite.cursor.Cursor object at 0x000001E14518F310>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
                 └ <Future finished exception=OperationalError('no such table: 2000000041')>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             └ functools.partial(<built-in method execute of sqlite3.Cursor object at 0x000001E144E02F40>, "SELECT command FROM '2000000041'...

sqlite3.OperationalError: no such table: 2000000041
2023-09-01T22:40:21.444841+0700 - ERROR - (sqlite3.ProgrammingError) Cannot operate on a closed database.
[SQL: SELECT peers.count_period 
FROM peers 
WHERE peers.peer_id = ?]
[parameters: (2000000041,)]
(Background on this error at: https://sqlalche.me/e/20/f405)
Traceback (most recent call last):

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1965, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x000001E13F7E18A0>
    │    └ <sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite object at 0x000001E1420C28D0>
    └ <sqlalchemy.engine.base.Connection object at 0x000001E1451BFE50>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\default.py", line 921, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ (2000000041,)
    │      │       └ 'SELECT peers.count_period \nFROM peers \nWHERE peers.peer_id = ?'
    │      └ <function AsyncAdapt_aiosqlite_cursor.execute at 0x000001E141A48A40>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000001E144DCBE80>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 113, in execute
    self._adapt_connection._handle_exception(error)
    │    └ <member '_adapt_connection' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000001E144DCBE80>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 263, in _handle_exception
    raise error
          └ ProgrammingError('Cannot operate on a closed database.')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 109, in execute
    self.await_(_cursor.close())
    │    │      │       └ <function Cursor.close at 0x000001E141A4B880>
    │    │      └ <aiosqlite.cursor.Cursor object at 0x000001E1451BD5D0>
    │    └ <member 'await_' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000001E144DCBE80>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 125, in await_only
    return current.driver.switch(awaitable)  # type: ignore[no-any-return]
           │                     └ <coroutine object Cursor.close at 0x000001E144D7D2F0>
           └ <_AsyncIoGreenlet object at 0x000001E145242980 (otid=0x000001E13E989E00) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 185, in greenlet_spawn
    value = await result
                  └ <coroutine object Cursor.close at 0x000001E144D7D2F0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 80, in close
    await self._execute(self._cursor.close)
          │    │        │    │       └ <method 'close' of 'sqlite3.Cursor' objects>
          │    │        │    └ <sqlite3.Cursor object at 0x000001E14522D8C0>
          │    │        └ <aiosqlite.cursor.Cursor object at 0x000001E1451BD5D0>
          │    └ <function Cursor._execute at 0x000001E141A4B420>
          └ <aiosqlite.cursor.Cursor object at 0x000001E1451BD5D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
                 │    │     │        │    │       └ {}
                 │    │     │        │    └ ()
                 │    │     │        └ <built-in method close of sqlite3.Cursor object at 0x000001E14522D8C0>
                 │    │     └ <function Connection._execute at 0x000001E1425385E0>
                 │    └ <Connection(Thread-240, stopped daemon 2032)>
                 └ <aiosqlite.cursor.Cursor object at 0x000001E1451BD5D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
                 └ <Future finished exception=ProgrammingError('Cannot operate on a closed database.')>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             └ functools.partial(<built-in method close of sqlite3.Cursor object at 0x000001E14522D8C0>)

sqlite3.ProgrammingError: Cannot operate on a closed database.


The above exception was the direct cause of the following exception:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 59, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000001E14284EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E1429154D0>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000001E142B71710>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000001E1429154D0>
    │    │            └ <function LoopWrapper.run_forever at 0x000001E1431B0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000001E144CE5490>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E1429154D0>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001E13E6A9760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001E13E1E13A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001E13C97F9C0>
    └ <Handle Task.task_wakeup(<Future finis...d database.')>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis...d database.')>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis...d database.')>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis...d database.')>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000001E144CE5890>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000001E144CE5AD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '8657278a7600861b9bc7c16329fae495a65effd4', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000001E14311F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101064, date=1693583062, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000001E14311C360>
                             └ <FromFuncHandler quotes_handler blocking=False rules=(<AndRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101064, date=1693583062, deleted=None, ...
                 │    └ <function quotes_handler at 0x000001E144D7B6A0>
                 └ <FromFuncHandler quotes_handler blocking=False rules=(<AndRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\template_response_handler.py", line 33, in quotes_handler
    count_period = (await SessionPeer.execute(select(Peers.count_period).where(Peers.peer_id == m.peer_id))).fetchone()[0]
                          │           │       │      │     │                   │     │          │ └ 2000000041
                          │           │       │      │     │                   │     │          └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101064, date=1693583062, deleted=None, ...
                          │           │       │      │     │                   │     └ <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x000001E141A86160>
                          │           │       │      │     │                   └ <class 'database_module.Tables.Peers'>
                          │           │       │      │     └ <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x000001E141A86200>
                          │           │       │      └ <class 'database_module.Tables.Peers'>
                          │           │       └ <function select at 0x000001E13F6C1BC0>
                          │           └ <function AsyncSession.execute at 0x000001E141A914E0>
                          └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E142578290>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 454, in execute
    result = await greenlet_spawn(
                   └ <function greenlet_spawn at 0x000001E13E9F4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 190, in greenlet_spawn
    result = context.throw(*sys.exc_info())
             │       │      │   └ <built-in function exc_info>
             │       │      └ <module 'sys' (built-in)>
             │       └ <method 'throw' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000001E145242980 (otid=0x000001E13E989E00) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2262, in execute
    return self._execute_internal(
           │    └ <function Session._execute_internal at 0x000001E1418E60C0>
           └ <sqlalchemy.orm.session.Session object at 0x000001E142578250>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2144, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                   │      │                 └ <classmethod(<function AbstractORMCompileState.orm_execute_statement at 0x000001E142B5C2C0>)>
                   │      └ <class 'sqlalchemy.orm.context.ORMSelectCompileState'>
                   └ typing.Any
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             │    └ <function Connection.execute at 0x000001E13F716520>
             └ <sqlalchemy.engine.base.Connection object at 0x000001E1451BFE50>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1412, in execute
    return meth(
           └ <bound method ClauseElement._execute_on_connection of <sqlalchemy.sql.selectable.Select object at 0x000001E1451B2750>>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           │          └ <function Connection._execute_clauseelement at 0x000001E13F716840>
           └ <sqlalchemy.engine.base.Connection object at 0x000001E1451BFE50>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1635, in _execute_clauseelement
    ret = self._execute_context(
          │    └ <function Connection._execute_context at 0x000001E13F716A20>
          └ <sqlalchemy.engine.base.Connection object at 0x000001E1451BFE50>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1844, in _execute_context
    return self._exec_single_context(
           │    └ <function Connection._exec_single_context at 0x000001E13F716AC0>
           └ <sqlalchemy.engine.base.Connection object at 0x000001E1451BFE50>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1984, in _exec_single_context
    self._handle_dbapi_exception(
    │    └ <function Connection._handle_dbapi_exception at 0x000001E13F716D40>
    └ <sqlalchemy.engine.base.Connection object at 0x000001E1451BFE50>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 2339, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
          │                    │              │                 └ ProgrammingError('Cannot operate on a closed database.')
          │                    │              └ (<class 'sqlite3.ProgrammingError'>, ProgrammingError('Cannot operate on a closed database.'), <traceback object at 0x000001E...
          │                    └ <method 'with_traceback' of 'BaseException' objects>
          └ ProgrammingError('(sqlite3.ProgrammingError) Cannot operate on a closed database.')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1965, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x000001E13F7E18A0>
    │    └ <sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite object at 0x000001E1420C28D0>
    └ <sqlalchemy.engine.base.Connection object at 0x000001E1451BFE50>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\default.py", line 921, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ (2000000041,)
    │      │       └ 'SELECT peers.count_period \nFROM peers \nWHERE peers.peer_id = ?'
    │      └ <function AsyncAdapt_aiosqlite_cursor.execute at 0x000001E141A48A40>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000001E144DCBE80>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 113, in execute
    self._adapt_connection._handle_exception(error)
    │    └ <member '_adapt_connection' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000001E144DCBE80>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 263, in _handle_exception
    raise error
          └ ProgrammingError('Cannot operate on a closed database.')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 109, in execute
    self.await_(_cursor.close())
    │    │      │       └ <function Cursor.close at 0x000001E141A4B880>
    │    │      └ <aiosqlite.cursor.Cursor object at 0x000001E1451BD5D0>
    │    └ <member 'await_' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000001E144DCBE80>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 125, in await_only
    return current.driver.switch(awaitable)  # type: ignore[no-any-return]
           │                     └ <coroutine object Cursor.close at 0x000001E144D7D2F0>
           └ <_AsyncIoGreenlet object at 0x000001E145242980 (otid=0x000001E13E989E00) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 185, in greenlet_spawn
    value = await result
                  └ <coroutine object Cursor.close at 0x000001E144D7D2F0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 80, in close
    await self._execute(self._cursor.close)
          │    │        │    │       └ <method 'close' of 'sqlite3.Cursor' objects>
          │    │        │    └ <sqlite3.Cursor object at 0x000001E14522D8C0>
          │    │        └ <aiosqlite.cursor.Cursor object at 0x000001E1451BD5D0>
          │    └ <function Cursor._execute at 0x000001E141A4B420>
          └ <aiosqlite.cursor.Cursor object at 0x000001E1451BD5D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
                 │    │     │        │    │       └ {}
                 │    │     │        │    └ ()
                 │    │     │        └ <built-in method close of sqlite3.Cursor object at 0x000001E14522D8C0>
                 │    │     └ <function Connection._execute at 0x000001E1425385E0>
                 │    └ <Connection(Thread-240, stopped daemon 2032)>
                 └ <aiosqlite.cursor.Cursor object at 0x000001E1451BD5D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
                 └ <Future finished exception=ProgrammingError('Cannot operate on a closed database.')>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             └ functools.partial(<built-in method close of sqlite3.Cursor object at 0x000001E14522D8C0>)

sqlalchemy.exc.ProgrammingError: (sqlite3.ProgrammingError) Cannot operate on a closed database.
[SQL: SELECT peers.count_period 
FROM peers 
WHERE peers.peer_id = ?]
[parameters: (2000000041,)]
(Background on this error at: https://sqlalche.me/e/20/f405)
2023-09-01T22:40:35.209428+0700 - ERROR - (sqlite3.ProgrammingError) Cannot operate on a closed database.
[SQL: SELECT peers.quotes 
FROM peers]
(Background on this error at: https://sqlalche.me/e/20/f405)
Traceback (most recent call last):

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1965, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x000001E13F7E18A0>
    │    └ <sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite object at 0x000001E1420C28D0>
    └ <sqlalchemy.engine.base.Connection object at 0x000001E1454B3FD0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\default.py", line 921, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ ()
    │      │       └ 'SELECT peers.quotes \nFROM peers'
    │      └ <function AsyncAdapt_aiosqlite_cursor.execute at 0x000001E141A48A40>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000001E1452291E0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 113, in execute
    self._adapt_connection._handle_exception(error)
    │    └ <member '_adapt_connection' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000001E1452291E0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 263, in _handle_exception
    raise error
          └ ProgrammingError('Cannot operate on a closed database.')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 109, in execute
    self.await_(_cursor.close())
    │    │      │       └ <function Cursor.close at 0x000001E141A4B880>
    │    │      └ <aiosqlite.cursor.Cursor object at 0x000001E1454B28D0>
    │    └ <member 'await_' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000001E1452291E0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 125, in await_only
    return current.driver.switch(awaitable)  # type: ignore[no-any-return]
           │                     └ <coroutine object Cursor.close at 0x000001E144D7F850>
           └ <_AsyncIoGreenlet object at 0x000001E145241380 (otid=0x000001E13E989E00) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 185, in greenlet_spawn
    value = await result
                  └ <coroutine object Cursor.close at 0x000001E144D7F850>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 80, in close
    await self._execute(self._cursor.close)
          │    │        │    │       └ <method 'close' of 'sqlite3.Cursor' objects>
          │    │        │    └ <sqlite3.Cursor object at 0x000001E1454AD4C0>
          │    │        └ <aiosqlite.cursor.Cursor object at 0x000001E1454B28D0>
          │    └ <function Cursor._execute at 0x000001E141A4B420>
          └ <aiosqlite.cursor.Cursor object at 0x000001E1454B28D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
                 │    │     │        │    │       └ {}
                 │    │     │        │    └ ()
                 │    │     │        └ <built-in method close of sqlite3.Cursor object at 0x000001E1454AD4C0>
                 │    │     └ <function Connection._execute at 0x000001E1425385E0>
                 │    └ <Connection(Thread-271, stopped daemon 2300)>
                 └ <aiosqlite.cursor.Cursor object at 0x000001E1454B28D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
                 └ <Future finished exception=ProgrammingError('Cannot operate on a closed database.')>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             └ functools.partial(<built-in method close of sqlite3.Cursor object at 0x000001E1454AD4C0>)

sqlite3.ProgrammingError: Cannot operate on a closed database.


The above exception was the direct cause of the following exception:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 59, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000001E14284EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E1429154D0>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000001E142B71710>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000001E1429154D0>
    │    │            └ <function LoopWrapper.run_forever at 0x000001E1431B0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000001E144CE5490>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E1429154D0>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001E13E6A9760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001E13E1E13A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001E13C97F9C0>
    └ <Handle Task.task_wakeup(<Future finis...d database.')>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis...d database.')>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis...d database.')>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis...d database.')>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000001E144CE5890>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000001E144CE5AD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '19264dbebfd96ab1ea8026f93a9c3e73e9942bbd', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000001E14311F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 64, in handle_event
    result = await handler.filter(message)
                   │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101072, date=1693583078, deleted=None, ...
                   │       └ <function FromFuncHandler.filter at 0x000001E14311C2C0>
                   └ <FromFuncHandler quotes_handler blocking=False rules=(<AndRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 21, in filter
    result = await rule.check(event)
                   │    │     └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101072, date=1693583078, deleted=None, ...
                   │    └ <function AndRule.check at 0x000001E14311E200>
                   └ <AndRule>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\rules\abc.py", line 40, in check
    check_response = await rule.check(event)
                           │    │     └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101072, date=1693583078, deleted=None, ...
                           │    └ <function MsgParamQuoteRule.check at 0x000001E142548E00>
                           └ <MsgParamQuoteRule>

  File "c:\k\project\PycharmProjects\bot2\hadlers_rules.py", line 49, in check
    return (await SessionPeer.execute(select(Peers.quotes))).fetchone()[0] == 1
                  │           │       │      │     └ <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x000001E141A86520>
                  │           │       │      └ <class 'database_module.Tables.Peers'>
                  │           │       └ <function select at 0x000001E13F6C1BC0>
                  │           └ <function AsyncSession.execute at 0x000001E141A914E0>
                  └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E142578290>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 454, in execute
    result = await greenlet_spawn(
                   └ <function greenlet_spawn at 0x000001E13E9F4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 190, in greenlet_spawn
    result = context.throw(*sys.exc_info())
             │       │      │   └ <built-in function exc_info>
             │       │      └ <module 'sys' (built-in)>
             │       └ <method 'throw' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000001E145241380 (otid=0x000001E13E989E00) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2262, in execute
    return self._execute_internal(
           │    └ <function Session._execute_internal at 0x000001E1418E60C0>
           └ <sqlalchemy.orm.session.Session object at 0x000001E142578250>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2144, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                   │      │                 └ <classmethod(<function AbstractORMCompileState.orm_execute_statement at 0x000001E142B5C2C0>)>
                   │      └ <class 'sqlalchemy.orm.context.ORMSelectCompileState'>
                   └ typing.Any
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             │    └ <function Connection.execute at 0x000001E13F716520>
             └ <sqlalchemy.engine.base.Connection object at 0x000001E1454B3FD0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1412, in execute
    return meth(
           └ <bound method ClauseElement._execute_on_connection of <sqlalchemy.sql.selectable.Select object at 0x000001E145235B90>>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           │          └ <function Connection._execute_clauseelement at 0x000001E13F716840>
           └ <sqlalchemy.engine.base.Connection object at 0x000001E1454B3FD0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1635, in _execute_clauseelement
    ret = self._execute_context(
          │    └ <function Connection._execute_context at 0x000001E13F716A20>
          └ <sqlalchemy.engine.base.Connection object at 0x000001E1454B3FD0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1844, in _execute_context
    return self._exec_single_context(
           │    └ <function Connection._exec_single_context at 0x000001E13F716AC0>
           └ <sqlalchemy.engine.base.Connection object at 0x000001E1454B3FD0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1984, in _exec_single_context
    self._handle_dbapi_exception(
    │    └ <function Connection._handle_dbapi_exception at 0x000001E13F716D40>
    └ <sqlalchemy.engine.base.Connection object at 0x000001E1454B3FD0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 2339, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
          │                    │              │                 └ ProgrammingError('Cannot operate on a closed database.')
          │                    │              └ (<class 'sqlite3.ProgrammingError'>, ProgrammingError('Cannot operate on a closed database.'), <traceback object at 0x000001E...
          │                    └ <method 'with_traceback' of 'BaseException' objects>
          └ ProgrammingError('(sqlite3.ProgrammingError) Cannot operate on a closed database.')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1965, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x000001E13F7E18A0>
    │    └ <sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite object at 0x000001E1420C28D0>
    └ <sqlalchemy.engine.base.Connection object at 0x000001E1454B3FD0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\default.py", line 921, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ ()
    │      │       └ 'SELECT peers.quotes \nFROM peers'
    │      └ <function AsyncAdapt_aiosqlite_cursor.execute at 0x000001E141A48A40>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000001E1452291E0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 113, in execute
    self._adapt_connection._handle_exception(error)
    │    └ <member '_adapt_connection' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000001E1452291E0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 263, in _handle_exception
    raise error
          └ ProgrammingError('Cannot operate on a closed database.')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 109, in execute
    self.await_(_cursor.close())
    │    │      │       └ <function Cursor.close at 0x000001E141A4B880>
    │    │      └ <aiosqlite.cursor.Cursor object at 0x000001E1454B28D0>
    │    └ <member 'await_' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000001E1452291E0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 125, in await_only
    return current.driver.switch(awaitable)  # type: ignore[no-any-return]
           │                     └ <coroutine object Cursor.close at 0x000001E144D7F850>
           └ <_AsyncIoGreenlet object at 0x000001E145241380 (otid=0x000001E13E989E00) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 185, in greenlet_spawn
    value = await result
                  └ <coroutine object Cursor.close at 0x000001E144D7F850>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 80, in close
    await self._execute(self._cursor.close)
          │    │        │    │       └ <method 'close' of 'sqlite3.Cursor' objects>
          │    │        │    └ <sqlite3.Cursor object at 0x000001E1454AD4C0>
          │    │        └ <aiosqlite.cursor.Cursor object at 0x000001E1454B28D0>
          │    └ <function Cursor._execute at 0x000001E141A4B420>
          └ <aiosqlite.cursor.Cursor object at 0x000001E1454B28D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
                 │    │     │        │    │       └ {}
                 │    │     │        │    └ ()
                 │    │     │        └ <built-in method close of sqlite3.Cursor object at 0x000001E1454AD4C0>
                 │    │     └ <function Connection._execute at 0x000001E1425385E0>
                 │    └ <Connection(Thread-271, stopped daemon 2300)>
                 └ <aiosqlite.cursor.Cursor object at 0x000001E1454B28D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
                 └ <Future finished exception=ProgrammingError('Cannot operate on a closed database.')>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             └ functools.partial(<built-in method close of sqlite3.Cursor object at 0x000001E1454AD4C0>)

sqlalchemy.exc.ProgrammingError: (sqlite3.ProgrammingError) Cannot operate on a closed database.
[SQL: SELECT peers.quotes 
FROM peers]
(Background on this error at: https://sqlalche.me/e/20/f405)
2023-09-01T22:40:36.874226+0700 - ERROR - This session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 59, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000001E14284EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E1429154D0>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000001E142B71710>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000001E1429154D0>
    │    │            └ <function LoopWrapper.run_forever at 0x000001E1431B0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000001E144CE5490>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E1429154D0>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001E13E6A9760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001E13E1E13A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001E13C97F9C0>
    └ <Handle <TaskStepMethWrapper object at 0x000001E145185960>()>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <TaskStepMethWrapper object at 0x000001E145185960>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <TaskStepMethWrapper object at 0x000001E145185960>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <TaskStepMethWrapper object at 0x000001E145185960>()>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000001E144CE5890>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000001E144CE5AD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'f272fe4b47d43f67a2a47d4dbf4bfead08a2b133', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000001E14311F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101075, date=1693583081, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000001E14311C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101075, date=1693583081, deleted=None, ...
                 │    └ <function bot at 0x000001E144D7A8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 20, in bot
    await SessionPeer.execute(insert(Peers).values(peer_id=peerID, count_period=0, e_g_mute = 0, e_g_head = 0,
          │           │       │      │                     └ 2000000041
          │           │       │      └ <class 'database_module.Tables.Peers'>
          │           │       └ <function insert at 0x000001E13F6BB7E0>
          │           └ <function AsyncSession.execute at 0x000001E141A914E0>
          └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E142578290>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 454, in execute
    result = await greenlet_spawn(
                   └ <function greenlet_spawn at 0x000001E13E9F4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {'params': None, 'execution_options': immutabledict({'prebuffer_rows': True}), 'bind_arguments': None}
             │       │       └ (<sqlalchemy.sql.dml.Insert object at 0x000001E1451BFA10>,)
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000001E144E13000 (otid=0x000001E13E989E00) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2262, in execute
    return self._execute_internal(
           │    └ <function Session._execute_internal at 0x000001E1418E60C0>
           └ <sqlalchemy.orm.session.Session object at 0x000001E142578250>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2134, in _execute_internal
    conn = self._connection_for_bind(bind)
           │    │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │    └ <function Session._connection_for_bind at 0x000001E1418E5E40>
           └ <sqlalchemy.orm.session.Session object at 0x000001E142578250>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2001, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           │     │                    │       └ None
           │     │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │     └ <function SessionTransaction._connection_for_bind at 0x000001E1418E49A0>
           └ <sqlalchemy.orm.session.SessionTransaction object at 0x000001E142ACCDC0>
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 103, in _go
    self._raise_for_prerequisite_state(fn.__name__, current_state)
    │    │                             │  │         └ <SessionTransactionState.PROVISIONING_CONNECTION: 6>
    │    │                             │  └ <attribute '__name__' of 'function' objects>
    │    │                             └ <function SessionTransaction._connection_for_bind at 0x000001E1418E47C0>
    │    └ <function SessionTransaction._raise_for_prerequisite_state at 0x000001E142043D80>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000001E142ACCDC0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 929, in _raise_for_prerequisite_state
    raise sa_exc.InvalidRequestError(
          │      └ <class 'sqlalchemy.exc.InvalidRequestError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.InvalidRequestError: This session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-01T22:40:38.421062+0700 - ERROR - This session is in 'prepared' state; no further SQL can be emitted within this transaction.
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 59, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000001E14284EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E1429154D0>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000001E142B71710>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000001E1429154D0>
    │    │            └ <function LoopWrapper.run_forever at 0x000001E1431B0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000001E144CE5490>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E1429154D0>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001E13E6A9760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001E13E1E13A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001E13C97F9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000001E144CE5890>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000001E144CE5AD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '6b9dc39cc05bea0f2a9bf840108e04f8adcb06c2', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000001E14311F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101073, date=1693583079, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000001E14311C360>
                             └ <FromFuncHandler quotes_handler blocking=False rules=(<AndRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101073, date=1693583079, deleted=None, ...
                 │    └ <function quotes_handler at 0x000001E144D7B6A0>
                 └ <FromFuncHandler quotes_handler blocking=False rules=(<AndRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\template_response_handler.py", line 33, in quotes_handler
    count_period = (await SessionPeer.execute(select(Peers.count_period).where(Peers.peer_id == m.peer_id))).fetchone()[0]
                          │           │       │      │     │                   │     │          │ └ 2000000041
                          │           │       │      │     │                   │     │          └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101073, date=1693583079, deleted=None, ...
                          │           │       │      │     │                   │     └ <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x000001E141A86160>
                          │           │       │      │     │                   └ <class 'database_module.Tables.Peers'>
                          │           │       │      │     └ <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x000001E141A86200>
                          │           │       │      └ <class 'database_module.Tables.Peers'>
                          │           │       └ <function select at 0x000001E13F6C1BC0>
                          │           └ <function AsyncSession.execute at 0x000001E141A914E0>
                          └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E142578290>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 454, in execute
    result = await greenlet_spawn(
                   └ <function greenlet_spawn at 0x000001E13E9F4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {'params': None, 'execution_options': immutabledict({'prebuffer_rows': True}), 'bind_arguments': None}
             │       │       └ (<sqlalchemy.sql.selectable.Select object at 0x000001E145245A50>,)
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000001E1451B0F40 (otid=0x000001E13E989E00) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2262, in execute
    return self._execute_internal(
           │    └ <function Session._execute_internal at 0x000001E1418E60C0>
           └ <sqlalchemy.orm.session.Session object at 0x000001E142578250>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2134, in _execute_internal
    conn = self._connection_for_bind(bind)
           │    │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │    └ <function Session._connection_for_bind at 0x000001E1418E5E40>
           └ <sqlalchemy.orm.session.Session object at 0x000001E142578250>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2001, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           │     │                    │       └ None
           │     │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │     └ <function SessionTransaction._connection_for_bind at 0x000001E1418E49A0>
           └ <sqlalchemy.orm.session.SessionTransaction object at 0x000001E142ACCDC0>
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 103, in _go
    self._raise_for_prerequisite_state(fn.__name__, current_state)
    │    │                             │  │         └ <SessionTransactionState.PREPARED: 2>
    │    │                             │  └ <attribute '__name__' of 'function' objects>
    │    │                             └ <function SessionTransaction._connection_for_bind at 0x000001E1418E47C0>
    │    └ <function SessionTransaction._raise_for_prerequisite_state at 0x000001E142043D80>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000001E142ACCDC0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 935, in _raise_for_prerequisite_state
    raise sa_exc.InvalidRequestError(
          │      └ <class 'sqlalchemy.exc.InvalidRequestError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.InvalidRequestError: This session is in 'prepared' state; no further SQL can be emitted within this transaction.
2023-09-01T23:05:47.683281+0700 - ERROR - Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 20, in bot
    await s.execute(insert(Peers).values(peer_id=peerID, count_period=0, e_g_mute = 0, e_g_head = 0,
          │ │       │      │                     └ 2000000041
          │ │       │      └ <class 'database_module.Tables.Peers'>
          │ │       └ <function insert at 0x000002C370AAB7E0>
          │ └ <function AsyncSession.execute at 0x000002C3739294E0>
          └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 454, in execute
    result = await greenlet_spawn(
                   └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {'params': None, 'execution_options': immutabledict({'prebuffer_rows': True}), 'bind_arguments': None}
             │       │       └ (<sqlalchemy.sql.dml.Insert object at 0x000002C3761BEA50>,)
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C3761D6D00 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2262, in execute
    return self._execute_internal(
           │    └ <function Session._execute_internal at 0x000002C373EB20C0>
           └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2134, in _execute_internal
    conn = self._connection_for_bind(bind)
           │    │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │    └ <function Session._connection_for_bind at 0x000002C373EB1E40>
           └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2001, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           │     │                    │       └ None
           │     │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │     └ <function SessionTransaction._connection_for_bind at 0x000002C373EB09A0>
           └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373695C20>
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 103, in _go
    self._raise_for_prerequisite_state(fn.__name__, current_state)
    │    │                             │  │         └ <SessionTransactionState.PROVISIONING_CONNECTION: 6>
    │    │                             │  └ <attribute '__name__' of 'function' objects>
    │    │                             └ <function SessionTransaction._connection_for_bind at 0x000002C373EB07C0>
    │    └ <function SessionTransaction._raise_for_prerequisite_state at 0x000002C3733EFD80>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373695C20>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 929, in _raise_for_prerequisite_state
    raise sa_exc.InvalidRequestError(
          │      └ <class 'sqlalchemy.exc.InvalidRequestError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.InvalidRequestError: This session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 61, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002C37310EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002C373F336A0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
    │    │            └ <function LoopWrapper.run_forever at 0x000002C3745A0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002C376099550>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002C36FA49760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000002C36F5813A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000002C36DD1F9C0>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002C376099990>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002C376099BD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '1e8920acd7abc51fd8a4f3b197baab0391707332', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002C37450F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101094, date=1693584592, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000002C37450C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101094, date=1693584592, deleted=None, ...
                 │    └ <function bot at 0x000002C37612A8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 19, in bot
    async with SessionPeer as s:                            # Стандартные настройки чатов
               │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 989, in close
    await greenlet_spawn(self.sync_session.close)
          │              │    │            └ <function Session.close at 0x000002C373EB2980>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
          └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C3761C5F80 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2413, in close
    self._close_impl(invalidate=False)
    │    └ <function Session._close_impl at 0x000002C373EB2AC0>
    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2455, in _close_impl
    transaction.close(invalidate)
    │           │     └ False
    │           └ <function SessionTransaction.close at 0x000002C373EB1260>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373695C20>
  File "<string>", line 2, in close
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-01T23:05:49.670047+0700 - ERROR - Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 20, in bot
    await s.execute(insert(Peers).values(peer_id=peerID, count_period=0, e_g_mute = 0, e_g_head = 0,
          │ │       │      │                     └ 2000000041
          │ │       │      └ <class 'database_module.Tables.Peers'>
          │ │       └ <function insert at 0x000002C370AAB7E0>
          │ └ <function AsyncSession.execute at 0x000002C3739294E0>
          └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 454, in execute
    result = await greenlet_spawn(
                   └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {'params': None, 'execution_options': immutabledict({'prebuffer_rows': True}), 'bind_arguments': None}
             │       │       └ (<sqlalchemy.sql.dml.Insert object at 0x000002C3761C4850>,)
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C3765A8240 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2262, in execute
    return self._execute_internal(
           │    └ <function Session._execute_internal at 0x000002C373EB20C0>
           └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2134, in _execute_internal
    conn = self._connection_for_bind(bind)
           │    │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │    └ <function Session._connection_for_bind at 0x000002C373EB1E40>
           └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2001, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           │     │                    │       └ None
           │     │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │     └ <function SessionTransaction._connection_for_bind at 0x000002C373EB09A0>
           └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373695C20>
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 103, in _go
    self._raise_for_prerequisite_state(fn.__name__, current_state)
    │    │                             │  │         └ <SessionTransactionState.PROVISIONING_CONNECTION: 6>
    │    │                             │  └ <attribute '__name__' of 'function' objects>
    │    │                             └ <function SessionTransaction._connection_for_bind at 0x000002C373EB07C0>
    │    └ <function SessionTransaction._raise_for_prerequisite_state at 0x000002C3733EFD80>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373695C20>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 929, in _raise_for_prerequisite_state
    raise sa_exc.InvalidRequestError(
          │      └ <class 'sqlalchemy.exc.InvalidRequestError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.InvalidRequestError: This session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 61, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002C37310EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002C373F336A0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
    │    │            └ <function LoopWrapper.run_forever at 0x000002C3745A0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002C376099550>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002C36FA49760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000002C36F5813A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000002C36DD1F9C0>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002C376099990>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002C376099BD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'f34daa72e216953f0ffe23dbec7aba81fc4fec11', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002C37450F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101093, date=1693584592, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000002C37450C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101093, date=1693584592, deleted=None, ...
                 │    └ <function bot at 0x000002C37612A8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 19, in bot
    async with SessionPeer as s:                            # Стандартные настройки чатов
               │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 989, in close
    await greenlet_spawn(self.sync_session.close)
          │              │    │            └ <function Session.close at 0x000002C373EB2980>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
          └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C3761C6580 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2413, in close
    self._close_impl(invalidate=False)
    │    └ <function Session._close_impl at 0x000002C373EB2AC0>
    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2455, in _close_impl
    transaction.close(invalidate)
    │           │     └ False
    │           └ <function SessionTransaction.close at 0x000002C373EB1260>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373695C20>
  File "<string>", line 2, in close
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-01T23:05:50.811338+0700 - ERROR - Method 'close()' can't be called here; method 'commit()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 22, in bot
    await s.commit()
          │ └ <function AsyncSession.commit at 0x000002C37392A660>
          └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 959, in commit
    await greenlet_spawn(self.sync_session.commit)
          │              │    │            └ <function Session.commit at 0x000002C373EB1C60>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
          └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C3765B1F00 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 1923, in commit
    trans.commit(_to_root=True)
    │     └ <function SessionTransaction.commit at 0x000002C373EB0E00>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373695C20>
  File "<string>", line 2, in commit
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'commit()' can't be called here; method 'commit()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 61, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002C37310EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002C373F336A0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
    │    │            └ <function LoopWrapper.run_forever at 0x000002C3745A0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002C376099550>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002C36FA49760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000002C36F5813A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000002C36DD1F9C0>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002C376099990>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002C376099BD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'a3f2be51bfc5caf2b3e540bba116ace4c662a8a0', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002C37450F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101096, date=1693584593, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000002C37450C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101096, date=1693584593, deleted=None, ...
                 │    └ <function bot at 0x000002C37612A8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 19, in bot
    async with SessionPeer as s:                            # Стандартные настройки чатов
               │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 989, in close
    await greenlet_spawn(self.sync_session.close)
          │              │    │            └ <function Session.close at 0x000002C373EB2980>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
          └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C3761C4880 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2413, in close
    self._close_impl(invalidate=False)
    │    └ <function Session._close_impl at 0x000002C373EB2AC0>
    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2455, in _close_impl
    transaction.close(invalidate)
    │           │     └ False
    │           └ <function SessionTransaction.close at 0x000002C373EB1260>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373695C20>
  File "<string>", line 2, in close
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'close()' can't be called here; method 'commit()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-01T23:05:50.988226+0700 - ERROR - Method 'close()' can't be called here; method 'commit()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 20, in bot
    await s.execute(insert(Peers).values(peer_id=peerID, count_period=0, e_g_mute = 0, e_g_head = 0,
          │ │       │      │                     └ 2000000041
          │ │       │      └ <class 'database_module.Tables.Peers'>
          │ │       └ <function insert at 0x000002C370AAB7E0>
          │ └ <function AsyncSession.execute at 0x000002C3739294E0>
          └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 454, in execute
    result = await greenlet_spawn(
                   └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {'params': None, 'execution_options': immutabledict({'prebuffer_rows': True}), 'bind_arguments': None}
             │       │       └ (<sqlalchemy.sql.dml.Insert object at 0x000002C3765B7D10>,)
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C376608D00 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2262, in execute
    return self._execute_internal(
           │    └ <function Session._execute_internal at 0x000002C373EB20C0>
           └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2134, in _execute_internal
    conn = self._connection_for_bind(bind)
           │    │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │    └ <function Session._connection_for_bind at 0x000002C373EB1E40>
           └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2001, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           │     │                    │       └ None
           │     │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │     └ <function SessionTransaction._connection_for_bind at 0x000002C373EB09A0>
           └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373695C20>
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 103, in _go
    self._raise_for_prerequisite_state(fn.__name__, current_state)
    │    │                             │  │         └ <SessionTransactionState.PREPARED: 2>
    │    │                             │  └ <attribute '__name__' of 'function' objects>
    │    │                             └ <function SessionTransaction._connection_for_bind at 0x000002C373EB07C0>
    │    └ <function SessionTransaction._raise_for_prerequisite_state at 0x000002C3733EFD80>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373695C20>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 935, in _raise_for_prerequisite_state
    raise sa_exc.InvalidRequestError(
          │      └ <class 'sqlalchemy.exc.InvalidRequestError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.InvalidRequestError: This session is in 'prepared' state; no further SQL can be emitted within this transaction.


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 61, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002C37310EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002C373F336A0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
    │    │            └ <function LoopWrapper.run_forever at 0x000002C3745A0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002C376099550>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002C36FA49760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000002C36F5813A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000002C36DD1F9C0>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002C376099990>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002C376099BD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '18b951c5a4a1bcc170783a0d667d3da8b7dc6c79', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002C37450F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101099, date=1693584596, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000002C37450C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101099, date=1693584596, deleted=None, ...
                 │    └ <function bot at 0x000002C37612A8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 19, in bot
    async with SessionPeer as s:                            # Стандартные настройки чатов
               │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 989, in close
    await greenlet_spawn(self.sync_session.close)
          │              │    │            └ <function Session.close at 0x000002C373EB2980>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
          └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C376609CC0 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2413, in close
    self._close_impl(invalidate=False)
    │    └ <function Session._close_impl at 0x000002C373EB2AC0>
    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2455, in _close_impl
    transaction.close(invalidate)
    │           │     └ False
    │           └ <function SessionTransaction.close at 0x000002C373EB1260>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373695C20>
  File "<string>", line 2, in close
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'close()' can't be called here; method 'commit()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-01T23:05:51.479923+0700 - ERROR - Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 61, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002C37310EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002C373F336A0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
    │    │            └ <function LoopWrapper.run_forever at 0x000002C3745A0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002C376099550>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002C36FA49760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000002C36F5813A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000002C36DD1F9C0>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002C376099990>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002C376099BD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '5e7fe5a25e3b749cf17ce42a31dec03a3b554413', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002C37450F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101092, date=1693584591, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000002C37450C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101092, date=1693584591, deleted=None, ...
                 │    └ <function bot at 0x000002C37612A8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 19, in bot
    async with SessionPeer as s:                            # Стандартные настройки чатов
               │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 1020, in __aexit__
    await asyncio.shield(task)
          │       │      └ <Task finished name='Task-115' coro=<AsyncSession.close() done, defined at C:\Users\Алексей\AppData\Roaming\Python\Python311\...
          │       └ <function shield at 0x000002C36F566AC0>
          └ <module 'asyncio' from 'C:\\Program Files\\Python311\\Lib\\asyncio\\__init__.py'>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 989, in close
    await greenlet_spawn(self.sync_session.close)
          │              │    │            └ <function Session.close at 0x000002C373EB2980>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
          └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C376615800 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2413, in close
    self._close_impl(invalidate=False)
    │    └ <function Session._close_impl at 0x000002C373EB2AC0>
    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2455, in _close_impl
    transaction.close(invalidate)
    │           │     └ False
    │           └ <function SessionTransaction.close at 0x000002C373EB1260>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373723B10>
  File "<string>", line 2, in close
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-01T23:05:51.779736+0700 - ERROR - Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\handlers\respond_priv.py", line 27, in EVIL_GOD
    E_G = (await s.execute(select(Peers).where(Peers.peer_id == self.peer))).fetchone()
                 │ │       │      │            │     │          │    └ 2000000041
                 │ │       │      │            │     │          └ <handlers.respond_priv.privileges object at 0x000002C3761C6A90>
                 │ │       │      │            │     └ <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x000002C37180E160>
                 │ │       │      │            └ <class 'database_module.Tables.Peers'>
                 │ │       │      └ <class 'database_module.Tables.Peers'>
                 │ │       └ <function select at 0x000002C370AB1BC0>
                 │ └ <function AsyncSession.execute at 0x000002C3739294E0>
                 └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 454, in execute
    result = await greenlet_spawn(
                   └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {'params': None, 'execution_options': immutabledict({'prebuffer_rows': True}), 'bind_arguments': None}
             │       │       └ (<sqlalchemy.sql.selectable.Select object at 0x000002C3761D5F10>,)
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C376616180 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2262, in execute
    return self._execute_internal(
           │    └ <function Session._execute_internal at 0x000002C373EB20C0>
           └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2134, in _execute_internal
    conn = self._connection_for_bind(bind)
           │    │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │    └ <function Session._connection_for_bind at 0x000002C373EB1E40>
           └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2001, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           │     │                    │       └ None
           │     │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │     └ <function SessionTransaction._connection_for_bind at 0x000002C373EB09A0>
           └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373DA7340>
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 103, in _go
    self._raise_for_prerequisite_state(fn.__name__, current_state)
    │    │                             │  │         └ <SessionTransactionState.PROVISIONING_CONNECTION: 6>
    │    │                             │  └ <attribute '__name__' of 'function' objects>
    │    │                             └ <function SessionTransaction._connection_for_bind at 0x000002C373EB07C0>
    │    └ <function SessionTransaction._raise_for_prerequisite_state at 0x000002C3733EFD80>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373DA7340>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 929, in _raise_for_prerequisite_state
    raise sa_exc.InvalidRequestError(
          │      └ <class 'sqlalchemy.exc.InvalidRequestError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.InvalidRequestError: This session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 61, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002C37310EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002C373F336A0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
    │    │            └ <function LoopWrapper.run_forever at 0x000002C3745A0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002C376099550>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002C36FA49760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000002C36F5813A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000002C36DD1F9C0>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002C376099990>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002C376099BD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '69bac03aceb3680a43c0f953c5f80c29a6be3915', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002C37450F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101098, date=1693584595, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000002C37450C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101098, date=1693584595, deleted=None, ...
                 │    └ <function bot at 0x000002C37612A8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 27, in bot
    await privileges(txt=msg.text, sender=msg.from_id, peer=peerID, obj=msg).EVIL_GOD() #исправить
          │              │   │            │   │             │           └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101098, date=1693584595, deleted=None, ...
          │              │   │            │   │             └ 2000000041
          │              │   │            │   └ 388145277
          │              │   │            └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101098, date=1693584595, deleted=None, ...
          │              │   └ '21'
          │              └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101098, date=1693584595, deleted=None, ...
          └ <class 'handlers.respond_priv.privileges'>

  File "c:\k\project\PycharmProjects\bot2\handlers\respond_priv.py", line 26, in EVIL_GOD
    async with SessionPeer as s:
               │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 989, in close
    await greenlet_spawn(self.sync_session.close)
          │              │    │            └ <function Session.close at 0x000002C373EB2980>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
          └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C3765A8040 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2413, in close
    self._close_impl(invalidate=False)
    │    └ <function Session._close_impl at 0x000002C373EB2AC0>
    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2455, in _close_impl
    transaction.close(invalidate)
    │           │     └ False
    │           └ <function SessionTransaction.close at 0x000002C373EB1260>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373DA7340>
  File "<string>", line 2, in close
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-01T23:05:52.300412+0700 - ERROR - Method 'close()' can't be called here; method 'commit()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\handlers\respond_priv.py", line 27, in EVIL_GOD
    E_G = (await s.execute(select(Peers).where(Peers.peer_id == self.peer))).fetchone()
                 │ │       │      │            │     │          │    └ 2000000041
                 │ │       │      │            │     │          └ <handlers.respond_priv.privileges object at 0x000002C37659F810>
                 │ │       │      │            │     └ <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x000002C37180E160>
                 │ │       │      │            └ <class 'database_module.Tables.Peers'>
                 │ │       │      └ <class 'database_module.Tables.Peers'>
                 │ │       └ <function select at 0x000002C370AB1BC0>
                 │ └ <function AsyncSession.execute at 0x000002C3739294E0>
                 └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 454, in execute
    result = await greenlet_spawn(
                   └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {'params': None, 'execution_options': immutabledict({'prebuffer_rows': True}), 'bind_arguments': None}
             │       │       └ (<sqlalchemy.sql.selectable.Select object at 0x000002C376608DD0>,)
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C37659FBC0 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2262, in execute
    return self._execute_internal(
           │    └ <function Session._execute_internal at 0x000002C373EB20C0>
           └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2134, in _execute_internal
    conn = self._connection_for_bind(bind)
           │    │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │    └ <function Session._connection_for_bind at 0x000002C373EB1E40>
           └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2001, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           │     │                    │       └ None
           │     │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │     └ <function SessionTransaction._connection_for_bind at 0x000002C373EB09A0>
           └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373DA7340>
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 103, in _go
    self._raise_for_prerequisite_state(fn.__name__, current_state)
    │    │                             │  │         └ <SessionTransactionState.PREPARED: 2>
    │    │                             │  └ <attribute '__name__' of 'function' objects>
    │    │                             └ <function SessionTransaction._connection_for_bind at 0x000002C373EB07C0>
    │    └ <function SessionTransaction._raise_for_prerequisite_state at 0x000002C3733EFD80>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373DA7340>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 935, in _raise_for_prerequisite_state
    raise sa_exc.InvalidRequestError(
          │      └ <class 'sqlalchemy.exc.InvalidRequestError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.InvalidRequestError: This session is in 'prepared' state; no further SQL can be emitted within this transaction.


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 61, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002C37310EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002C373F336A0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
    │    │            └ <function LoopWrapper.run_forever at 0x000002C3745A0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002C376099550>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002C36FA49760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000002C36F5813A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000002C36DD1F9C0>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002C376099990>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002C376099BD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '2f783335b1445e94d4f38384358d0427e7917c95', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002C37450F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101100, date=1693584597, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000002C37450C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101100, date=1693584597, deleted=None, ...
                 │    └ <function bot at 0x000002C37612A8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 27, in bot
    await privileges(txt=msg.text, sender=msg.from_id, peer=peerID, obj=msg).EVIL_GOD() #исправить
          │              │   │            │   │             │           └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101100, date=1693584597, deleted=None, ...
          │              │   │            │   │             └ 2000000041
          │              │   │            │   └ 388145277
          │              │   │            └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101100, date=1693584597, deleted=None, ...
          │              │   └ '14'
          │              └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101100, date=1693584597, deleted=None, ...
          └ <class 'handlers.respond_priv.privileges'>

  File "c:\k\project\PycharmProjects\bot2\handlers\respond_priv.py", line 26, in EVIL_GOD
    async with SessionPeer as s:
               │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 989, in close
    await greenlet_spawn(self.sync_session.close)
          │              │    │            └ <function Session.close at 0x000002C373EB2980>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
          └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C3766140C0 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2413, in close
    self._close_impl(invalidate=False)
    │    └ <function Session._close_impl at 0x000002C373EB2AC0>
    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2455, in _close_impl
    transaction.close(invalidate)
    │           │     └ False
    │           └ <function SessionTransaction.close at 0x000002C373EB1260>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373DA7340>
  File "<string>", line 2, in close
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'close()' can't be called here; method 'commit()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-01T23:05:52.936019+0700 - ERROR - Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 61, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002C37310EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002C373F336A0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
    │    │            └ <function LoopWrapper.run_forever at 0x000002C3745A0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002C376099550>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002C36FA49760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000002C36F5813A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000002C36DD1F9C0>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002C376099990>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002C376099BD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'be47f3ab2ee8496dbad9d0cfac908f1b08419aa4', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002C37450F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101095, date=1693584592, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000002C37450C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101095, date=1693584592, deleted=None, ...
                 │    └ <function bot at 0x000002C37612A8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 27, in bot
    await privileges(txt=msg.text, sender=msg.from_id, peer=peerID, obj=msg).EVIL_GOD() #исправить
          │              │   │            │   │             │           └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101095, date=1693584592, deleted=None, ...
          │              │   │            │   │             └ 2000000041
          │              │   │            │   └ -190195384
          │              │   │            └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101095, date=1693584592, deleted=None, ...
          │              │   └ '3 чо ты шыпишь йобаная'
          │              └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101095, date=1693584592, deleted=None, ...
          └ <class 'handlers.respond_priv.privileges'>

  File "c:\k\project\PycharmProjects\bot2\handlers\respond_priv.py", line 26, in EVIL_GOD
    async with SessionPeer as s:
               │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 1020, in __aexit__
    await asyncio.shield(task)
          │       │      └ <Task finished name='Task-136' coro=<AsyncSession.close() done, defined at C:\Users\Алексей\AppData\Roaming\Python\Python311\...
          │       └ <function shield at 0x000002C36F566AC0>
          └ <module 'asyncio' from 'C:\\Program Files\\Python311\\Lib\\asyncio\\__init__.py'>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 989, in close
    await greenlet_spawn(self.sync_session.close)
          │              │    │            └ <function Session.close at 0x000002C373EB2980>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
          └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C3766176C0 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2413, in close
    self._close_impl(invalidate=False)
    │    └ <function Session._close_impl at 0x000002C373EB2AC0>
    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2455, in _close_impl
    transaction.close(invalidate)
    │           │     └ False
    │           └ <function SessionTransaction.close at 0x000002C373EB1260>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373589090>
  File "<string>", line 2, in close
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-01T23:05:53.168874+0700 - ERROR - Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 20, in bot
    await s.execute(insert(Peers).values(peer_id=peerID, count_period=0, e_g_mute = 0, e_g_head = 0,
          │ │       │      │                     └ 2000000041
          │ │       │      └ <class 'database_module.Tables.Peers'>
          │ │       └ <function insert at 0x000002C370AAB7E0>
          │ └ <function AsyncSession.execute at 0x000002C3739294E0>
          └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 454, in execute
    result = await greenlet_spawn(
                   └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {'params': None, 'execution_options': immutabledict({'prebuffer_rows': True}), 'bind_arguments': None}
             │       │       └ (<sqlalchemy.sql.dml.Insert object at 0x000002C3765B5D10>,)
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C376628C80 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2262, in execute
    return self._execute_internal(
           │    └ <function Session._execute_internal at 0x000002C373EB20C0>
           └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2134, in _execute_internal
    conn = self._connection_for_bind(bind)
           │    │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │    └ <function Session._connection_for_bind at 0x000002C373EB1E40>
           └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2001, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           │     │                    │       └ None
           │     │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │     └ <function SessionTransaction._connection_for_bind at 0x000002C373EB09A0>
           └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373589090>
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 103, in _go
    self._raise_for_prerequisite_state(fn.__name__, current_state)
    │    │                             │  │         └ <SessionTransactionState.PROVISIONING_CONNECTION: 6>
    │    │                             │  └ <attribute '__name__' of 'function' objects>
    │    │                             └ <function SessionTransaction._connection_for_bind at 0x000002C373EB07C0>
    │    └ <function SessionTransaction._raise_for_prerequisite_state at 0x000002C3733EFD80>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373589090>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 929, in _raise_for_prerequisite_state
    raise sa_exc.InvalidRequestError(
          │      └ <class 'sqlalchemy.exc.InvalidRequestError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.InvalidRequestError: This session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 61, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002C37310EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002C373F336A0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
    │    │            └ <function LoopWrapper.run_forever at 0x000002C3745A0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002C376099550>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002C36FA49760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000002C36F5813A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000002C36DD1F9C0>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002C376099990>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002C376099BD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '216407c4c81b3eb1fba978cadb134e533dd143af', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002C37450F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101102, date=1693584598, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000002C37450C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101102, date=1693584598, deleted=None, ...
                 │    └ <function bot at 0x000002C37612A8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 19, in bot
    async with SessionPeer as s:                            # Стандартные настройки чатов
               │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 989, in close
    await greenlet_spawn(self.sync_session.close)
          │              │    │            └ <function Session.close at 0x000002C373EB2980>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
          └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C376616B00 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2413, in close
    self._close_impl(invalidate=False)
    │    └ <function Session._close_impl at 0x000002C373EB2AC0>
    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2455, in _close_impl
    transaction.close(invalidate)
    │           │     └ False
    │           └ <function SessionTransaction.close at 0x000002C373EB1260>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373589090>
  File "<string>", line 2, in close
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-01T23:05:53.547639+0700 - ERROR - Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 61, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002C37310EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002C373F336A0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
    │    │            └ <function LoopWrapper.run_forever at 0x000002C3745A0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002C376099550>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002C36FA49760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000002C36F5813A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000002C36DD1F9C0>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002C376099990>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002C376099BD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'e19588ae6899a6dfafc4868dd5f8a6b2bd78a6ed', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002C37450F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101101, date=1693584597, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000002C37450C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101101, date=1693584597, deleted=None, ...
                 │    └ <function bot at 0x000002C37612A8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 19, in bot
    async with SessionPeer as s:                            # Стандартные настройки чатов
               │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 1020, in __aexit__
    await asyncio.shield(task)
          │       │      └ <Task finished name='Task-138' coro=<AsyncSession.close() done, defined at C:\Users\Алексей\AppData\Roaming\Python\Python311\...
          │       └ <function shield at 0x000002C36F566AC0>
          └ <module 'asyncio' from 'C:\\Program Files\\Python311\\Lib\\asyncio\\__init__.py'>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 989, in close
    await greenlet_spawn(self.sync_session.close)
          │              │    │            └ <function Session.close at 0x000002C373EB2980>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
          └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C3766291C0 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2413, in close
    self._close_impl(invalidate=False)
    │    └ <function Session._close_impl at 0x000002C373EB2AC0>
    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2455, in _close_impl
    transaction.close(invalidate)
    │           │     └ False
    │           └ <function SessionTransaction.close at 0x000002C373EB1260>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373589090>
  File "<string>", line 2, in close
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-01T23:06:01.555672+0700 - ERROR - Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 20, in bot
    await s.execute(insert(Peers).values(peer_id=peerID, count_period=0, e_g_mute = 0, e_g_head = 0,
          │ │       │      │                     └ 2000000041
          │ │       │      └ <class 'database_module.Tables.Peers'>
          │ │       └ <function insert at 0x000002C370AAB7E0>
          │ └ <function AsyncSession.execute at 0x000002C3739294E0>
          └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 454, in execute
    result = await greenlet_spawn(
                   └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {'params': None, 'execution_options': immutabledict({'prebuffer_rows': True}), 'bind_arguments': None}
             │       │       └ (<sqlalchemy.sql.dml.Insert object at 0x000002C3760983D0>,)
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C376628B40 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2262, in execute
    return self._execute_internal(
           │    └ <function Session._execute_internal at 0x000002C373EB20C0>
           └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2134, in _execute_internal
    conn = self._connection_for_bind(bind)
           │    │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │    └ <function Session._connection_for_bind at 0x000002C373EB1E40>
           └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2001, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           │     │                    │       └ None
           │     │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │     └ <function SessionTransaction._connection_for_bind at 0x000002C373EB09A0>
           └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373DA7520>
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 103, in _go
    self._raise_for_prerequisite_state(fn.__name__, current_state)
    │    │                             │  │         └ <SessionTransactionState.PROVISIONING_CONNECTION: 6>
    │    │                             │  └ <attribute '__name__' of 'function' objects>
    │    │                             └ <function SessionTransaction._connection_for_bind at 0x000002C373EB07C0>
    │    └ <function SessionTransaction._raise_for_prerequisite_state at 0x000002C3733EFD80>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373DA7520>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 929, in _raise_for_prerequisite_state
    raise sa_exc.InvalidRequestError(
          │      └ <class 'sqlalchemy.exc.InvalidRequestError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.InvalidRequestError: This session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 61, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002C37310EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002C373F336A0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
    │    │            └ <function LoopWrapper.run_forever at 0x000002C3745A0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002C376099550>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002C36FA49760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000002C36F5813A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000002C36DD1F9C0>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002C376099990>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002C376099BD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'd14f15bfc5f0c82d8d6cd4aa2bdebac9e4b2f783', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002C37450F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101104, date=1693584600, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000002C37450C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101104, date=1693584600, deleted=None, ...
                 │    └ <function bot at 0x000002C37612A8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 19, in bot
    async with SessionPeer as s:                            # Стандартные настройки чатов
               │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 989, in close
    await greenlet_spawn(self.sync_session.close)
          │              │    │            └ <function Session.close at 0x000002C373EB2980>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
          └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C376629D00 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2413, in close
    self._close_impl(invalidate=False)
    │    └ <function Session._close_impl at 0x000002C373EB2AC0>
    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2455, in _close_impl
    transaction.close(invalidate)
    │           │     └ False
    │           └ <function SessionTransaction.close at 0x000002C373EB1260>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373DA7520>
  File "<string>", line 2, in close
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-01T23:06:02.986783+0700 - ERROR - Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 20, in bot
    await s.execute(insert(Peers).values(peer_id=peerID, count_period=0, e_g_mute = 0, e_g_head = 0,
          │ │       │      │                     └ 2000000041
          │ │       │      └ <class 'database_module.Tables.Peers'>
          │ │       └ <function insert at 0x000002C370AAB7E0>
          │ └ <function AsyncSession.execute at 0x000002C3739294E0>
          └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 454, in execute
    result = await greenlet_spawn(
                   └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {'params': None, 'execution_options': immutabledict({'prebuffer_rows': True}), 'bind_arguments': None}
             │       │       └ (<sqlalchemy.sql.dml.Insert object at 0x000002C3761C7690>,)
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C376617B00 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2262, in execute
    return self._execute_internal(
           │    └ <function Session._execute_internal at 0x000002C373EB20C0>
           └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2134, in _execute_internal
    conn = self._connection_for_bind(bind)
           │    │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │    └ <function Session._connection_for_bind at 0x000002C373EB1E40>
           └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2001, in _connection_for_bind
    return trans._connection_for_bind(engine, execution_options)
           │     │                    │       └ None
           │     │                    └ Engine(sqlite+aiosqlite:///database_module/peer.db)
           │     └ <function SessionTransaction._connection_for_bind at 0x000002C373EB09A0>
           └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373DA7520>
  File "<string>", line 2, in _connection_for_bind
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 103, in _go
    self._raise_for_prerequisite_state(fn.__name__, current_state)
    │    │                             │  │         └ <SessionTransactionState.PROVISIONING_CONNECTION: 6>
    │    │                             │  └ <attribute '__name__' of 'function' objects>
    │    │                             └ <function SessionTransaction._connection_for_bind at 0x000002C373EB07C0>
    │    └ <function SessionTransaction._raise_for_prerequisite_state at 0x000002C3733EFD80>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373DA7520>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 929, in _raise_for_prerequisite_state
    raise sa_exc.InvalidRequestError(
          │      └ <class 'sqlalchemy.exc.InvalidRequestError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.InvalidRequestError: This session is provisioning a new connection; concurrent operations are not permitted (Background on this error at: https://sqlalche.me/e/20/isce)


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 61, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002C37310EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002C373F336A0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
    │    │            └ <function LoopWrapper.run_forever at 0x000002C3745A0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002C376099550>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002C36FA49760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000002C36F5813A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000002C36DD1F9C0>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002C376099990>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002C376099BD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'e2d2e42dc4c0a6c5136c6d8a382928976c426372', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002C37450F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101105, date=1693584601, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000002C37450C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101105, date=1693584601, deleted=None, ...
                 │    └ <function bot at 0x000002C37612A8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 19, in bot
    async with SessionPeer as s:                            # Стандартные настройки чатов
               │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 989, in close
    await greenlet_spawn(self.sync_session.close)
          │              │    │            └ <function Session.close at 0x000002C373EB2980>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
          └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C37662B800 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2413, in close
    self._close_impl(invalidate=False)
    │    └ <function Session._close_impl at 0x000002C373EB2AC0>
    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2455, in _close_impl
    transaction.close(invalidate)
    │           │     └ False
    │           └ <function SessionTransaction.close at 0x000002C373EB1260>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373DA7520>
  File "<string>", line 2, in close
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-01T23:06:03.544438+0700 - ERROR - Method 'close()' can't be called here; method 'commit()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 22, in bot
    await s.commit()
          │ └ <function AsyncSession.commit at 0x000002C37392A660>
          └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 959, in commit
    await greenlet_spawn(self.sync_session.commit)
          │              │    │            └ <function Session.commit at 0x000002C373EB1C60>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
          └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C3765ACC40 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 1923, in commit
    trans.commit(_to_root=True)
    │     └ <function SessionTransaction.commit at 0x000002C373EB0E00>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373DA7520>
  File "<string>", line 2, in commit
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'commit()' can't be called here; method 'commit()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 61, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002C37310EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002C373F336A0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
    │    │            └ <function LoopWrapper.run_forever at 0x000002C3745A0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002C376099550>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002C36FA49760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000002C36F5813A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000002C36DD1F9C0>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002C376099990>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002C376099BD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '6d2108d186d55da81bcf70cff7af27fb78b9075c', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002C37450F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101106, date=1693584606, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000002C37450C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101106, date=1693584606, deleted=None, ...
                 │    └ <function bot at 0x000002C37612A8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 19, in bot
    async with SessionPeer as s:                            # Стандартные настройки чатов
               │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 989, in close
    await greenlet_spawn(self.sync_session.close)
          │              │    │            └ <function Session.close at 0x000002C373EB2980>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>
          └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C3746A1440 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2413, in close
    self._close_impl(invalidate=False)
    │    └ <function Session._close_impl at 0x000002C373EB2AC0>
    └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2455, in _close_impl
    transaction.close(invalidate)
    │           │     └ False
    │           └ <function SessionTransaction.close at 0x000002C373EB1260>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000002C373DA7520>
  File "<string>", line 2, in close
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'close()' can't be called here; method 'commit()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-01T23:06:03.731322+0700 - ERROR - (sqlite3.ProgrammingError) Cannot operate on a closed database.
[SQL: SELECT peers.quotes 
FROM peers]
(Background on this error at: https://sqlalche.me/e/20/f405)
Traceback (most recent call last):

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1965, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x000002C370BD58A0>
    │    └ <sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite object at 0x000002C3746A0DD0>
    └ <sqlalchemy.engine.base.Connection object at 0x000002C37662C3D0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\default.py", line 921, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ ()
    │      │       └ 'SELECT peers.quotes \nFROM peers'
    │      └ <function AsyncAdapt_aiosqlite_cursor.execute at 0x000002C3718CCA40>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000002C37616F8E0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 113, in execute
    self._adapt_connection._handle_exception(error)
    │    └ <member '_adapt_connection' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000002C37616F8E0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 263, in _handle_exception
    raise error
          └ ProgrammingError('Cannot operate on a closed database.')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 109, in execute
    self.await_(_cursor.close())
    │    │      │       └ <function Cursor.close at 0x000002C3718CF880>
    │    │      └ <aiosqlite.cursor.Cursor object at 0x000002C3740962D0>
    │    └ <member 'await_' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000002C37616F8E0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 125, in await_only
    return current.driver.switch(awaitable)  # type: ignore[no-any-return]
           │                     └ <coroutine object Cursor.close at 0x000002C3765FDB10>
           └ <_AsyncIoGreenlet object at 0x000002C3761B0A40 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 185, in greenlet_spawn
    value = await result
                  └ <coroutine object Cursor.close at 0x000002C3765FDB10>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 80, in close
    await self._execute(self._cursor.close)
          │    │        │    │       └ <method 'close' of 'sqlite3.Cursor' objects>
          │    │        │    └ <sqlite3.Cursor object at 0x000002C3765F4EC0>
          │    │        └ <aiosqlite.cursor.Cursor object at 0x000002C3740962D0>
          │    └ <function Cursor._execute at 0x000002C3718CF420>
          └ <aiosqlite.cursor.Cursor object at 0x000002C3740962D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
                 │    │     │        │    │       └ {}
                 │    │     │        │    └ ()
                 │    │     │        └ <built-in method close of sqlite3.Cursor object at 0x000002C3765F4EC0>
                 │    │     └ <function Connection._execute at 0x000002C3718205E0>
                 │    └ <Connection(Thread-72, stopped daemon 3068)>
                 └ <aiosqlite.cursor.Cursor object at 0x000002C3740962D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
                 └ <Future finished exception=ProgrammingError('Cannot operate on a closed database.')>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             └ functools.partial(<built-in method close of sqlite3.Cursor object at 0x000002C3765F4EC0>)

sqlite3.ProgrammingError: Cannot operate on a closed database.


The above exception was the direct cause of the following exception:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 61, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002C37310EF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002C373F336A0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
    │    │            └ <function LoopWrapper.run_forever at 0x000002C3745A0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002C376099550>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002C376099390>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002C36FA49760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000002C36F5813A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000002C36DD1F9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002C376099990>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002C376099BD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'c1d14ec20eaa893e377204cdebf88ef85dbe8373', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002C37450F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 64, in handle_event
    result = await handler.filter(message)
                   │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101097, date=1693584594, deleted=None, ...
                   │       └ <function FromFuncHandler.filter at 0x000002C37450C2C0>
                   └ <FromFuncHandler quotes_handler blocking=False rules=(<AndRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 21, in filter
    result = await rule.check(event)
                   │    │     └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101097, date=1693584594, deleted=None, ...
                   │    └ <function AndRule.check at 0x000002C37450E200>
                   └ <AndRule>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\rules\abc.py", line 40, in check
    check_response = await rule.check(event)
                           │    │     └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101097, date=1693584594, deleted=None, ...
                           │    └ <function MsgParamQuoteRule.check at 0x000002C371884E00>
                           └ <MsgParamQuoteRule>

  File "c:\k\project\PycharmProjects\bot2\hadlers_rules.py", line 52, in check
    q = (await s.execute(select(Peers.quotes))).fetchone()[0]
               │ │       │      │     └ <sqlalchemy.orm.attributes.InstrumentedAttribute object at 0x000002C37180E520>
               │ │       │      └ <class 'database_module.Tables.Peers'>
               │ │       └ <function select at 0x000002C370AB1BC0>
               │ └ <function AsyncSession.execute at 0x000002C3739294E0>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000002C37431B150>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 454, in execute
    result = await greenlet_spawn(
                   └ <function greenlet_spawn at 0x000002C36FDE4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 190, in greenlet_spawn
    result = context.throw(*sys.exc_info())
             │       │      │   └ <built-in function exc_info>
             │       │      └ <module 'sys' (built-in)>
             │       └ <method 'throw' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000002C3761B0A40 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2262, in execute
    return self._execute_internal(
           │    └ <function Session._execute_internal at 0x000002C373EB20C0>
           └ <sqlalchemy.orm.session.Session object at 0x000002C373CD6310>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2144, in _execute_internal
    result: Result[Any] = compile_state_cls.orm_execute_statement(
                   │      │                 └ <classmethod(<function AbstractORMCompileState.orm_execute_statement at 0x000002C372CE02C0>)>
                   │      └ <class 'sqlalchemy.orm.context.ORMSelectCompileState'>
                   └ typing.Any
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\context.py", line 293, in orm_execute_statement
    result = conn.execute(
             │    └ <function Connection.execute at 0x000002C370B06520>
             └ <sqlalchemy.engine.base.Connection object at 0x000002C37662C3D0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1412, in execute
    return meth(
           └ <bound method ClauseElement._execute_on_connection of <sqlalchemy.sql.selectable.Select object at 0x000002C376189750>>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           │          └ <function Connection._execute_clauseelement at 0x000002C370B06840>
           └ <sqlalchemy.engine.base.Connection object at 0x000002C37662C3D0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1635, in _execute_clauseelement
    ret = self._execute_context(
          │    └ <function Connection._execute_context at 0x000002C370B06A20>
          └ <sqlalchemy.engine.base.Connection object at 0x000002C37662C3D0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1844, in _execute_context
    return self._exec_single_context(
           │    └ <function Connection._exec_single_context at 0x000002C370B06AC0>
           └ <sqlalchemy.engine.base.Connection object at 0x000002C37662C3D0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1984, in _exec_single_context
    self._handle_dbapi_exception(
    │    └ <function Connection._handle_dbapi_exception at 0x000002C370B06D40>
    └ <sqlalchemy.engine.base.Connection object at 0x000002C37662C3D0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 2339, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
          │                    │              │                 └ ProgrammingError('Cannot operate on a closed database.')
          │                    │              └ (<class 'sqlite3.ProgrammingError'>, ProgrammingError('Cannot operate on a closed database.'), <traceback object at 0x000002C...
          │                    └ <method 'with_traceback' of 'BaseException' objects>
          └ ProgrammingError('(sqlite3.ProgrammingError) Cannot operate on a closed database.')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1965, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x000002C370BD58A0>
    │    └ <sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite object at 0x000002C3746A0DD0>
    └ <sqlalchemy.engine.base.Connection object at 0x000002C37662C3D0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\default.py", line 921, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ ()
    │      │       └ 'SELECT peers.quotes \nFROM peers'
    │      └ <function AsyncAdapt_aiosqlite_cursor.execute at 0x000002C3718CCA40>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000002C37616F8E0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 113, in execute
    self._adapt_connection._handle_exception(error)
    │    └ <member '_adapt_connection' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000002C37616F8E0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 263, in _handle_exception
    raise error
          └ ProgrammingError('Cannot operate on a closed database.')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 109, in execute
    self.await_(_cursor.close())
    │    │      │       └ <function Cursor.close at 0x000002C3718CF880>
    │    │      └ <aiosqlite.cursor.Cursor object at 0x000002C3740962D0>
    │    └ <member 'await_' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x000002C37616F8E0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 125, in await_only
    return current.driver.switch(awaitable)  # type: ignore[no-any-return]
           │                     └ <coroutine object Cursor.close at 0x000002C3765FDB10>
           └ <_AsyncIoGreenlet object at 0x000002C3761B0A40 (otid=0x000002C36FD79EF0) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 185, in greenlet_spawn
    value = await result
                  └ <coroutine object Cursor.close at 0x000002C3765FDB10>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 80, in close
    await self._execute(self._cursor.close)
          │    │        │    │       └ <method 'close' of 'sqlite3.Cursor' objects>
          │    │        │    └ <sqlite3.Cursor object at 0x000002C3765F4EC0>
          │    │        └ <aiosqlite.cursor.Cursor object at 0x000002C3740962D0>
          │    └ <function Cursor._execute at 0x000002C3718CF420>
          └ <aiosqlite.cursor.Cursor object at 0x000002C3740962D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
                 │    │     │        │    │       └ {}
                 │    │     │        │    └ ()
                 │    │     │        └ <built-in method close of sqlite3.Cursor object at 0x000002C3765F4EC0>
                 │    │     └ <function Connection._execute at 0x000002C3718205E0>
                 │    └ <Connection(Thread-72, stopped daemon 3068)>
                 └ <aiosqlite.cursor.Cursor object at 0x000002C3740962D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
                 └ <Future finished exception=ProgrammingError('Cannot operate on a closed database.')>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             └ functools.partial(<built-in method close of sqlite3.Cursor object at 0x000002C3765F4EC0>)

sqlalchemy.exc.ProgrammingError: (sqlite3.ProgrammingError) Cannot operate on a closed database.
[SQL: SELECT peers.quotes 
FROM peers]
(Background on this error at: https://sqlalche.me/e/20/f405)
2023-09-01T23:15:58.567593+0700 - ERROR - 'AsyncSessionTransaction' object has no attribute 'execute'
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 61, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000001637CE0AF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001637EDF9890>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000001637CCDF600>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000001637EDF9890>
    │    │            └ <function LoopWrapper.run_forever at 0x000001637D2F0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000001637EDF9A90>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001637EDF9890>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x00000163787D9760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x00000163783113A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x0000016376AAF9C0>
    └ <Handle <TaskStepMethWrapper object at 0x000001637EE83DC0>()>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <TaskStepMethWrapper object at 0x000001637EE83DC0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <TaskStepMethWrapper object at 0x000001637EE83DC0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <TaskStepMethWrapper object at 0x000001637EE83DC0>()>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000001637CDE6BD0>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000001637EDF9F90>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '6ca5c1da117de56736f19b847d481f5cb10a29b2', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000001637D25F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101131, date=1693585204, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000001637D25C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101131, date=1693585204, deleted=None, ...
                 │    └ <function bot at 0x000001637EE8E8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 20, in bot
    await s.execute(insert(Peers).values(peer_id=peerID, count_period=0, e_g_mute = 0, e_g_head = 0,
          │         │      │                     └ 2000000041
          │         │      └ <class 'database_module.Tables.Peers'>
          │         └ <function insert at 0x00000163797FB7E0>
          └ <sqlalchemy.ext.asyncio.session.AsyncSessionTransaction object at 0x000001637C6B9780>

AttributeError: 'AsyncSessionTransaction' object has no attribute 'execute'
2023-09-01T23:16:08.244908+0700 - ERROR - 'AsyncSessionTransaction' object has no attribute 'execute'
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 61, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000001637CE0AF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001637EDF9890>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000001637CCDF600>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000001637EDF9890>
    │    │            └ <function LoopWrapper.run_forever at 0x000001637D2F0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000001637EDF9A90>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001637EDF9890>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x00000163787D9760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x00000163783113A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x0000016376AAF9C0>
    └ <Handle <TaskStepMethWrapper object at 0x000001637EE832E0>()>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <TaskStepMethWrapper object at 0x000001637EE832E0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <TaskStepMethWrapper object at 0x000001637EE832E0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <TaskStepMethWrapper object at 0x000001637EE832E0>()>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000001637CDE6BD0>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000001637EDF9F90>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '5bf0307b6c545057966d6485ded75b38bafde171', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000001637D25F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101132, date=1693585214, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000001637D25C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101132, date=1693585214, deleted=None, ...
                 │    └ <function bot at 0x000001637EE8E8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 20, in bot
    await s.execute(insert(Peers).values(peer_id=peerID, count_period=0, e_g_mute = 0, e_g_head = 0,
          │         │      │                     └ 2000000041
          │         │      └ <class 'database_module.Tables.Peers'>
          │         └ <function insert at 0x00000163797FB7E0>
          └ <sqlalchemy.ext.asyncio.session.AsyncSessionTransaction object at 0x000001637D3F1F00>

AttributeError: 'AsyncSessionTransaction' object has no attribute 'execute'
2023-09-01T23:29:32.495231+0700 - ERROR - 'AsyncSessionTransaction' object has no attribute 'begin'
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 65, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002152BB96F20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002152D3E4D50>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002152C272340>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002152D3E4D50>
    │    │            └ <function LoopWrapper.run_forever at 0x000002152C8DC860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002152D3E4F50>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002152D3E4D50>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x0000021527DF9760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x00000215279313A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x00000215260CF9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002152D3E5390>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002152D3E55D0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'd995ae935eff558cd2893d82ccdf4a96771c982c', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002152C84B4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101134, date=1693586016, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000002152C848360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101134, date=1693586016, deleted=None, ...
                 │    └ <function bot at 0x000002152D4768E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 29, in bot
    await privileges(txt=msg.text, sender=msg.from_id, peer=peerID, obj=msg).EVIL_GOD() #исправить
          │              │   │            │   │             │           └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101134, date=1693586016, deleted=None, ...
          │              │   │            │   │             └ 2000000041
          │              │   │            │   └ 388145277
          │              │   │            └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101134, date=1693586016, deleted=None, ...
          │              │   └ '1'
          │              └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101134, date=1693586016, deleted=None, ...
          └ <class 'handlers.respond_priv.privileges'>

  File "c:\k\project\PycharmProjects\bot2\handlers\respond_priv.py", line 27, in EVIL_GOD
    await s.begin()
          └ <sqlalchemy.ext.asyncio.session.AsyncSessionTransaction object at 0x000002152BFA0D80>

AttributeError: 'AsyncSessionTransaction' object has no attribute 'begin'
2023-09-01T23:30:52.431963+0700 - ERROR - 'AsyncSessionTransaction' object has no attribute 'begin'
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 65, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002152BB96F20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002152D3E4D50>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002152C272340>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002152D3E4D50>
    │    │            └ <function LoopWrapper.run_forever at 0x000002152C8DC860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002152D3E4F50>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002152D3E4D50>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x0000021527DF9760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x00000215279313A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x00000215260CF9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002152D3E5390>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002152D3E55D0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'c5e7b54bf09f1fe3ab544226ac345ef05632452e', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002152C84B4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101135, date=1693586097, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000002152C848360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101135, date=1693586097, deleted=None, ...
                 │    └ <function bot at 0x000002152D4768E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 29, in bot
    await privileges(txt=msg.text, sender=msg.from_id, peer=peerID, obj=msg).EVIL_GOD() #исправить
          │              │   │            │   │             │           └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101135, date=1693586097, deleted=None, ...
          │              │   │            │   │             └ 2000000041
          │              │   │            │   └ 118081484
          │              │   │            └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101135, date=1693586097, deleted=None, ...
          │              │   └ 'я сделала губы чтобы ими пердеть☺'
          │              └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101135, date=1693586097, deleted=None, ...
          └ <class 'handlers.respond_priv.privileges'>

  File "c:\k\project\PycharmProjects\bot2\handlers\respond_priv.py", line 27, in EVIL_GOD
    await s.begin()
          └ <sqlalchemy.ext.asyncio.session.AsyncSessionTransaction object at 0x000002152E5001C0>

AttributeError: 'AsyncSessionTransaction' object has no attribute 'begin'
2023-09-01T23:31:25.447332+0700 - ERROR - 'AsyncSessionTransaction' object has no attribute 'begin'
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 65, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x0000024095D9AF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x00000240985F9590>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x0000024096611210>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x00000240985F9590>
    │    │            └ <function LoopWrapper.run_forever at 0x0000024096C50860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x00000240985F9750>
    └ <vkbottle.framework.bot.bot.Bot object at 0x00000240985F9590>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x0000024092099760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x0000024091FC13A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000002409035F9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x00000240985F9B90>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x00000240985F9DD0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'cefbc2eee3202bc7e0261c1b58d637eda3c61ab3', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x0000024096BBF4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101136, date=1693586131, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x0000024096BBC360>
                             └ <FromFuncHandler words_handler blocking=False rules=(<AndRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101136, date=1693586131, deleted=None, ...
                 │    └ <function words_handler at 0x000002409868B600>
                 └ <FromFuncHandler words_handler blocking=False rules=(<AndRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\template_response_handler.py", line 18, in words_handler
    await s.begin()
          └ <sqlalchemy.ext.asyncio.session.AsyncSessionTransaction object at 0x00000240986C2DC0>

AttributeError: 'AsyncSessionTransaction' object has no attribute 'begin'
2023-09-01T23:33:58.875701+0700 - ERROR - A transaction is already begun on this Session.
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 65, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000001E8B07BEF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000001E8B186FDD0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>
    │    │            └ <function LoopWrapper.run_forever at 0x000001E8B2010860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000001E8B3AE9C90>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001E8AD499760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001E8AD3D13A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001E8AB76F9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000001E8B3AEA090>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000001E8B3AEA250>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'deccd22d5d9277ca0720aee7d000181f5bc412ea', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000001E8B1F7F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101145, date=1693586284, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000001E8B1F7C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101145, date=1693586284, deleted=None, ...
                 │    └ <function bot at 0x000001E8B3B7E8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 20, in bot
    await s.begin()
          │ └ <function AsyncSession.begin at 0x000001E8B1406480>
          └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 1807, in start
    await greenlet_spawn(
          └ <function greenlet_spawn at 0x000001E8AD854EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000001E8B3C264C0 (otid=0x000001E8AD7EA070) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 1835, in begin
    raise sa_exc.InvalidRequestError(
          │      └ <class 'sqlalchemy.exc.InvalidRequestError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.InvalidRequestError: A transaction is already begun on this Session.
2023-09-01T23:34:00.990576+0700 - ERROR - A transaction is already begun on this Session.
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 65, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000001E8B07BEF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000001E8B186FDD0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>
    │    │            └ <function LoopWrapper.run_forever at 0x000001E8B2010860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000001E8B3AE9C90>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001E8AD499760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001E8AD3D13A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001E8AB76F9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000001E8B3AEA090>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000001E8B3AEA250>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '98d67d517f2050f06885531131664ab325f28595', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000001E8B1F7F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101147, date=1693586285, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000001E8B1F7C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101147, date=1693586285, deleted=None, ...
                 │    └ <function bot at 0x000001E8B3B7E8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 20, in bot
    await s.begin()
          │ └ <function AsyncSession.begin at 0x000001E8B1406480>
          └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 1807, in start
    await greenlet_spawn(
          └ <function greenlet_spawn at 0x000001E8AD854EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000001E8B3C13500 (otid=0x000001E8AD7EA070) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 1835, in begin
    raise sa_exc.InvalidRequestError(
          │      └ <class 'sqlalchemy.exc.InvalidRequestError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.InvalidRequestError: A transaction is already begun on this Session.
2023-09-01T23:34:01.879025+0700 - ERROR - Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 20, in bot
    await s.begin()
          │ └ <function AsyncSession.begin at 0x000001E8B1406480>
          └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 1807, in start
    await greenlet_spawn(
          └ <function greenlet_spawn at 0x000001E8AD854EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000001E8B403E380 (otid=0x000001E8AD7EA070) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 1835, in begin
    raise sa_exc.InvalidRequestError(
          │      └ <class 'sqlalchemy.exc.InvalidRequestError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.InvalidRequestError: A transaction is already begun on this Session.


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 65, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000001E8B07BEF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000001E8B186FDD0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>
    │    │            └ <function LoopWrapper.run_forever at 0x000001E8B2010860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000001E8B3AE9C90>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001E8AD499760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001E8AD3D13A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001E8AB76F9C0>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000001E8B3AEA090>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000001E8B3AEA250>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'aabfcdcfbfb472a887d4c1f07d6c76f6ff728541', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000001E8B1F7F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101149, date=1693586286, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000001E8B1F7C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101149, date=1693586286, deleted=None, ...
                 │    └ <function bot at 0x000001E8B3B7E8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 19, in bot
    async with SessionPeer as s:                            # Стандартные настройки чатов
               │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 989, in close
    await greenlet_spawn(self.sync_session.close)
          │              │    │            └ <function Session.close at 0x000001E8B108A980>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000001E8B2111410>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>
          └ <function greenlet_spawn at 0x000001E8AD854EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000001E8B3C13D00 (otid=0x000001E8AD7EA070) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2413, in close
    self._close_impl(invalidate=False)
    │    └ <function Session._close_impl at 0x000001E8B108AAC0>
    └ <sqlalchemy.orm.session.Session object at 0x000001E8B2111410>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2455, in _close_impl
    transaction.close(invalidate)
    │           │     └ False
    │           └ <function SessionTransaction.close at 0x000001E8B1089260>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000001E8B1427D90>
  File "<string>", line 2, in close
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-01T23:34:02.989848+0700 - ERROR - A transaction is already begun on this Session.
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 65, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000001E8B07BEF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000001E8B186FDD0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>
    │    │            └ <function LoopWrapper.run_forever at 0x000001E8B2010860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000001E8B3AE9C90>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001E8AD499760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001E8AD3D13A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001E8AB76F9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000001E8B3AEA090>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000001E8B3AEA250>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'b5882374e006d1658d62e371963033274d5ad746', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000001E8B1F7F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 64, in handle_event
    result = await handler.filter(message)
                   │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101151, date=1693586287, deleted=None, ...
                   │       └ <function FromFuncHandler.filter at 0x000001E8B1F7C2C0>
                   └ <FromFuncHandler quotes_handler blocking=False rules=(<AndRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 21, in filter
    result = await rule.check(event)
                   │    │     └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101151, date=1693586287, deleted=None, ...
                   │    └ <function AndRule.check at 0x000001E8B1F7E200>
                   └ <AndRule>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\rules\abc.py", line 40, in check
    check_response = await rule.check(event)
                           │    │     └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101151, date=1693586287, deleted=None, ...
                           │    └ <function MsgParamQuoteRule.check at 0x000001E8B0B90E00>
                           └ <MsgParamQuoteRule>

  File "c:\k\project\PycharmProjects\bot2\hadlers_rules.py", line 54, in check
    await s.begin()
          │ └ <function AsyncSession.begin at 0x000001E8B1406480>
          └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 1807, in start
    await greenlet_spawn(
          └ <function greenlet_spawn at 0x000001E8AD854EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000001E8B3BD0B00 (otid=0x000001E8AD7EA070) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 1835, in begin
    raise sa_exc.InvalidRequestError(
          │      └ <class 'sqlalchemy.exc.InvalidRequestError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.InvalidRequestError: A transaction is already begun on this Session.
2023-09-01T23:35:02.851213+0700 - ERROR - Method 'close()' can't be called here; method 'commit()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\handlers\template_response_handler.py", line 36, in quotes_handler
    await s.begin()
          │ └ <function AsyncSession.begin at 0x000001E8B1406480>
          └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 1807, in start
    await greenlet_spawn(
          └ <function greenlet_spawn at 0x000001E8AD854EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000001E8B3C1AB00 (otid=0x000001E8AD7EA070) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 1835, in begin
    raise sa_exc.InvalidRequestError(
          │      └ <class 'sqlalchemy.exc.InvalidRequestError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.InvalidRequestError: A transaction is already begun on this Session.


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 65, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000001E8B07BEF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000001E8B186FDD0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>
    │    │            └ <function LoopWrapper.run_forever at 0x000001E8B2010860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000001E8B3AE9C90>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001E8AD499760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001E8AD3D13A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001E8AB76F9C0>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000001E8B3AEA090>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000001E8B3AEA250>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'acf475934fac5ffd77e0a3a01699c99df7b72e7c', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000001E8B1F7F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[MessagesMessageAttachment(audio=None, audio_message=None, call=Non...
                             │       └ <function FromFuncHandler.handle at 0x000001E8B1F7C360>
                             └ <FromFuncHandler quotes_handler blocking=False rules=(<AndRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[MessagesMessageAttachment(audio=None, audio_message=None, call=Non...
                 │    └ <function quotes_handler at 0x000001E8B3B7F6A0>
                 └ <FromFuncHandler quotes_handler blocking=False rules=(<AndRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\template_response_handler.py", line 35, in quotes_handler
    async with SessionPeer as s:
               │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 989, in close
    await greenlet_spawn(self.sync_session.close)
          │              │    │            └ <function Session.close at 0x000001E8B108A980>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000001E8B2111410>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>
          └ <function greenlet_spawn at 0x000001E8AD854EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000001E8B3C06A40 (otid=0x000001E8AD7EA070) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2413, in close
    self._close_impl(invalidate=False)
    │    └ <function Session._close_impl at 0x000001E8B108AAC0>
    └ <sqlalchemy.orm.session.Session object at 0x000001E8B2111410>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2455, in _close_impl
    transaction.close(invalidate)
    │           │     └ False
    │           └ <function SessionTransaction.close at 0x000001E8B1089260>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000001E8B18285A0>
  File "<string>", line 2, in close
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'close()' can't be called here; method 'commit()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-01T23:35:03.170017+0700 - ERROR - Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 65, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000001E8B07BEF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000001E8B186FDD0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>
    │    │            └ <function LoopWrapper.run_forever at 0x000001E8B2010860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000001E8B3AE9C90>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001E8AD499760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001E8AD3D13A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001E8AB76F9C0>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000001E8B3AEA090>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000001E8B3AEA250>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '1b9f9b4acac883877265100ac69d45642fa093d2', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000001E8B1F7F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 64, in handle_event
    result = await handler.filter(message)
                   │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101162, date=1693586348, deleted=None, ...
                   │       └ <function FromFuncHandler.filter at 0x000001E8B1F7C2C0>
                   └ <FromFuncHandler words_handler blocking=False rules=(<AndRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 21, in filter
    result = await rule.check(event)
                   │    │     └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101162, date=1693586348, deleted=None, ...
                   │    └ <function AndRule.check at 0x000001E8B1F7E200>
                   └ <AndRule>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\rules\abc.py", line 40, in check
    check_response = await rule.check(event)
                           │    │     └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101162, date=1693586348, deleted=None, ...
                           │    └ <function MsgParamWordsRule.check at 0x000001E8B0B90D60>
                           └ <MsgParamWordsRule>

  File "c:\k\project\PycharmProjects\bot2\hadlers_rules.py", line 43, in check
    async with SessionPeer as s:
               │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 1020, in __aexit__
    await asyncio.shield(task)
          │       │      └ <Task finished name='Task-257' coro=<AsyncSession.close() done, defined at C:\Users\Алексей\AppData\Roaming\Python\Python311\...
          │       └ <function shield at 0x000001E8AD3B6AC0>
          └ <module 'asyncio' from 'C:\\Program Files\\Python311\\Lib\\asyncio\\__init__.py'>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 989, in close
    await greenlet_spawn(self.sync_session.close)
          │              │    │            └ <function Session.close at 0x000001E8B108A980>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000001E8B2111410>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>
          └ <function greenlet_spawn at 0x000001E8AD854EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000001E8B4067F80 (otid=0x000001E8AD7EA070) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2413, in close
    self._close_impl(invalidate=False)
    │    └ <function Session._close_impl at 0x000001E8B108AAC0>
    └ <sqlalchemy.orm.session.Session object at 0x000001E8B2111410>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2455, in _close_impl
    transaction.close(invalidate)
    │           │     └ False
    │           └ <function SessionTransaction.close at 0x000001E8B1089260>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000001E8B1829720>
  File "<string>", line 2, in close
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-01T23:35:03.420861+0700 - ERROR - Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 20, in bot
    await s.begin()
          │ └ <function AsyncSession.begin at 0x000001E8B1406480>
          └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 1807, in start
    await greenlet_spawn(
          └ <function greenlet_spawn at 0x000001E8AD854EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000001E8B403CC80 (otid=0x000001E8AD7EA070) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 1835, in begin
    raise sa_exc.InvalidRequestError(
          │      └ <class 'sqlalchemy.exc.InvalidRequestError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.InvalidRequestError: A transaction is already begun on this Session.


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 65, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000001E8B07BEF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000001E8B186FDD0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>
    │    │            └ <function LoopWrapper.run_forever at 0x000001E8B2010860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000001E8B3AE9C90>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000001E8B3AE9A90>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000001E8AD499760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000001E8AD3D13A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000001E8AB76F9C0>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finis....CLOSED: 5>")>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000001E8B3AEA090>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000001E8B3AEA250>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '005420bc57484904629957f5d8560884b0f8e91a', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000001E8B1F7F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101163, date=1693586349, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000001E8B1F7C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101163, date=1693586349, deleted=None, ...
                 │    └ <function bot at 0x000001E8B3B7E8E0>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 19, in bot
    async with SessionPeer as s:                            # Стандартные настройки чатов
               │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>
               └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 989, in close
    await greenlet_spawn(self.sync_session.close)
          │              │    │            └ <function Session.close at 0x000001E8B108A980>
          │              │    └ <sqlalchemy.orm.session.Session object at 0x000001E8B2111410>
          │              └ <sqlalchemy.orm.session.AsyncSession object at 0x000001E8B0C3BF50>
          └ <function greenlet_spawn at 0x000001E8AD854EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 179, in greenlet_spawn
    result = context.switch(*args, **kwargs)
             │       │       │       └ {}
             │       │       └ ()
             │       └ <method 'switch' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x000001E8B4032EC0 (otid=0x000001E8AD7EA070) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2413, in close
    self._close_impl(invalidate=False)
    │    └ <function Session._close_impl at 0x000001E8B108AAC0>
    └ <sqlalchemy.orm.session.Session object at 0x000001E8B2111410>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2455, in _close_impl
    transaction.close(invalidate)
    │           │     └ False
    │           └ <function SessionTransaction.close at 0x000001E8B1089260>
    └ <sqlalchemy.orm.session.SessionTransaction object at 0x000001E8B1829720>
  File "<string>", line 2, in close
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\state_changes.py", line 121, in _go
    raise sa_exc.IllegalStateChangeError(
          │      └ <class 'sqlalchemy.exc.IllegalStateChangeError'>
          └ <module 'sqlalchemy.exc' from 'C:\\Users\\Алексей\\AppData\\Roaming\\Python\\Python311\\site-packages\\sqlalchemy\\exc.py'>

sqlalchemy.exc.IllegalStateChangeError: Method 'close()' can't be called here; method '_connection_for_bind()' is already in progress and this would cause an unexpected state change to <SessionTransactionState.CLOSED: 5> (Background on this error at: https://sqlalche.me/e/20/isce)
2023-09-02T11:40:15.309730+0700 - ERROR - name 'scoped_session' is not defined
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 73, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x0000023D814F7060>
    └ <vkbottle.framework.bot.bot.Bot object at 0x0000023D8357C090>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x0000023D8150E480>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x0000023D8357C090>
    │    │            └ <function LoopWrapper.run_forever at 0x0000023D81A509A0>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x0000023D8357C290>
    └ <vkbottle.framework.bot.bot.Bot object at 0x0000023D8357C090>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x0000023DFCF69760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x0000023DFCEA13A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x0000023DFB23F9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x0000023D8357C6D0>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x0000023D8357C910>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'aa1a5b207d681fcb960935f7a614a4a649f77bc0', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x0000023D819BF600>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101269, date=1693629863, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x0000023D819BC4A0>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101269, date=1693629863, deleted=None, ...
                 │    └ <function bot at 0x0000023D8360E980>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 33, in bot
    await privileges(txt=msg.text, sender=msg.from_id, peer=peerID, obj=msg).EVIL_GOD() #исправить
          │              │   │            │   │             │           └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101269, date=1693629863, deleted=None, ...
          │              │   │            │   │             └ 2000000041
          │              │   │            │   └ 388145277
          │              │   │            └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101269, date=1693629863, deleted=None, ...
          │              │   └ '1'
          │              └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101269, date=1693629863, deleted=None, ...
          └ <class 'handlers.respond_priv.privileges'>

  File "c:\k\project\PycharmProjects\bot2\handlers\respond_priv.py", line 26, in EVIL_GOD
    SessionPeer = scoped_session(sessionmaker(bind=peerDB,class_=AsyncSession, expire_on_commit=False, autoflush=True))()

NameError: name 'scoped_session' is not defined
2023-09-02T16:07:25.286521+0700 - ERROR - (sqlite3.OperationalError) no such table: 2000000041
[SQL: SELECT "2000000041"."key", "2000000041".val 
FROM "2000000041"]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1965, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x0000021BE17A18A0>
    │    └ <sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite object at 0x0000021BE4933690>
    └ <sqlalchemy.engine.base.Connection object at 0x0000021BE6D36850>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\default.py", line 921, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ ()
    │      │       └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
    │      └ <function AsyncAdapt_aiosqlite_cursor.execute at 0x0000021BE48E0A40>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6D30760>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 113, in execute
    self._adapt_connection._handle_exception(error)
    │    └ <member '_adapt_connection' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6D30760>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 263, in _handle_exception
    raise error
          └ OperationalError('no such table: 2000000041')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 95, in execute
    self.await_(_cursor.execute(operation, parameters))
    │    │      │       │       │          └ ()
    │    │      │       │       └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
    │    │      │       └ <function Cursor.execute at 0x0000021BE48E34C0>
    │    │      └ <aiosqlite.cursor.Cursor object at 0x0000021BE3CAE8D0>
    │    └ <member 'await_' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6D30760>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 125, in await_only
    return current.driver.switch(awaitable)  # type: ignore[no-any-return]
           │                     └ <coroutine object Cursor.execute at 0x0000021BE6CF74C0>
           └ <_AsyncIoGreenlet object at 0x0000021BE6D36800 (otid=0x0000021BE0949E30) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 185, in greenlet_spawn
    value = await result
                  └ <coroutine object Cursor.execute at 0x0000021BE6CF74C0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
          │    │        │    │       │        │    └ ()
          │    │        │    │       │        └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
          │    │        │    │       └ <method 'execute' of 'sqlite3.Cursor' objects>
          │    │        │    └ <sqlite3.Cursor object at 0x0000021BE6D03BC0>
          │    │        └ <aiosqlite.cursor.Cursor object at 0x0000021BE3CAE8D0>
          │    └ <function Cursor._execute at 0x0000021BE48E3420>
          └ <aiosqlite.cursor.Cursor object at 0x0000021BE3CAE8D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
                 │    │     │        │    │       └ {}
                 │    │     │        │    └ ('SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"', ())
                 │    │     │        └ <built-in method execute of sqlite3.Cursor object at 0x0000021BE6D03BC0>
                 │    │     └ <function Connection._execute at 0x0000021BE49185E0>
                 │    └ <Connection(Thread-2, stopped daemon 6600)>
                 └ <aiosqlite.cursor.Cursor object at 0x0000021BE3CAE8D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
                 └ <Future finished exception=OperationalError('no such table: 2000000041')>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             └ functools.partial(<built-in method close of sqlite3.Connection object at 0x0000021BE6D39F30>)

sqlite3.OperationalError: no such table: 2000000041


The above exception was the direct cause of the following exception:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 57, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x0000021BE4332F20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x0000021BE6C3CD50>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x0000021BE4B30F40>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x0000021BE6C3CD50>
    │    │            └ <function LoopWrapper.run_forever at 0x0000021BE5170860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x0000021BE6C3CF10>
    └ <vkbottle.framework.bot.bot.Bot object at 0x0000021BE6C3CD50>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x0000021BE05C9760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x0000021BE01013A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x0000021BDE89F9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x0000021BE6C3D310>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x0000021BE6C3D4D0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '29c5f31032ca4de4108fc7c5cda79f9d5b154020', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x0000021BE50DF4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[MessagesMessageAttachment(audio=None, audio_message=MessagesAudioM...
                             │       └ <function FromFuncHandler.handle at 0x0000021BE50DC360>
                             └ <FromFuncHandler words_handler blocking=False rules=(<AndRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[MessagesMessageAttachment(audio=None, audio_message=MessagesAudioM...
                 │    └ <function words_handler at 0x0000021BE6CDB6A0>
                 └ <FromFuncHandler words_handler blocking=False rules=(<AndRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\template_response_handler.py", line 17, in words_handler
    words_BD = await DBexec(wordsDB,select(tw.c.key,tw.c.val)).dbselect()  #f"SELECT key,val FROM '{peerID}' "
                     │      │       │      │  │     │  └ <sqlalchemy.sql.base.ReadOnlyColumnCollection object at 0x0000021BE416E9D0>
                     │      │       │      │  │     └ Table('2000000041', MetaData(), Column('id', Integer(), table=<2000000041>, primary_key=True, nullable=False), Column('key', ...
                     │      │       │      │  └ <sqlalchemy.sql.base.ReadOnlyColumnCollection object at 0x0000021BE416E9D0>
                     │      │       │      └ Table('2000000041', MetaData(), Column('id', Integer(), table=<2000000041>, primary_key=True, nullable=False), Column('key', ...
                     │      │       └ <function select at 0x0000021BE1681BC0>
                     │      └ <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x0000021BE4933600>
                     └ <class 'database_module.Tables.DBexec'>

  File "c:\k\project\PycharmProjects\bot2\database_module\Tables.py", line 112, in dbselect
    result = (await s.execute(self.query)).fetchall()
                    │ │       │    └ <sqlalchemy.sql.selectable.Select object at 0x0000021BE41D5AD0>
                    │ │       └ <database_module.Tables.DBexec object at 0x0000021BE6D21F50>
                    │ └ <function AsyncSession.execute at 0x0000021BE228D4E0>
                    └ <sqlalchemy.orm.session.AsyncSession object at 0x0000021BE6D34910>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 454, in execute
    result = await greenlet_spawn(
                   └ <function greenlet_spawn at 0x0000021BE09B4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 190, in greenlet_spawn
    result = context.throw(*sys.exc_info())
             │       │      │   └ <built-in function exc_info>
             │       │      └ <module 'sys' (built-in)>
             │       └ <method 'throw' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x0000021BE6D36800 (otid=0x0000021BE0949E30) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2262, in execute
    return self._execute_internal(
           │    └ <function Session._execute_internal at 0x0000021BE42520C0>
           └ <sqlalchemy.orm.session.Session object at 0x0000021BE6D34110>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2153, in _execute_internal
    result = conn.execute(
             │    └ <function Connection.execute at 0x0000021BE16D6520>
             └ <sqlalchemy.engine.base.Connection object at 0x0000021BE6D36850>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1412, in execute
    return meth(
           └ <bound method ClauseElement._execute_on_connection of <sqlalchemy.sql.selectable.Select object at 0x0000021BE41D5AD0>>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           │          └ <function Connection._execute_clauseelement at 0x0000021BE16D6840>
           └ <sqlalchemy.engine.base.Connection object at 0x0000021BE6D36850>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1635, in _execute_clauseelement
    ret = self._execute_context(
          │    └ <function Connection._execute_context at 0x0000021BE16D6A20>
          └ <sqlalchemy.engine.base.Connection object at 0x0000021BE6D36850>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1844, in _execute_context
    return self._exec_single_context(
           │    └ <function Connection._exec_single_context at 0x0000021BE16D6AC0>
           └ <sqlalchemy.engine.base.Connection object at 0x0000021BE6D36850>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1984, in _exec_single_context
    self._handle_dbapi_exception(
    │    └ <function Connection._handle_dbapi_exception at 0x0000021BE16D6D40>
    └ <sqlalchemy.engine.base.Connection object at 0x0000021BE6D36850>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 2339, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
          │                    │              │                 └ OperationalError('no such table: 2000000041')
          │                    │              └ (<class 'sqlite3.OperationalError'>, OperationalError('no such table: 2000000041'), <traceback object at 0x0000021BE6D346C0>)
          │                    └ <method 'with_traceback' of 'BaseException' objects>
          └ OperationalError('(sqlite3.OperationalError) no such table: 2000000041')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1965, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x0000021BE17A18A0>
    │    └ <sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite object at 0x0000021BE4933690>
    └ <sqlalchemy.engine.base.Connection object at 0x0000021BE6D36850>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\default.py", line 921, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ ()
    │      │       └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
    │      └ <function AsyncAdapt_aiosqlite_cursor.execute at 0x0000021BE48E0A40>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6D30760>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 113, in execute
    self._adapt_connection._handle_exception(error)
    │    └ <member '_adapt_connection' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6D30760>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 263, in _handle_exception
    raise error
          └ OperationalError('no such table: 2000000041')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 95, in execute
    self.await_(_cursor.execute(operation, parameters))
    │    │      │       │       │          └ ()
    │    │      │       │       └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
    │    │      │       └ <function Cursor.execute at 0x0000021BE48E34C0>
    │    │      └ <aiosqlite.cursor.Cursor object at 0x0000021BE3CAE8D0>
    │    └ <member 'await_' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6D30760>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 125, in await_only
    return current.driver.switch(awaitable)  # type: ignore[no-any-return]
           │                     └ <coroutine object Cursor.execute at 0x0000021BE6CF74C0>
           └ <_AsyncIoGreenlet object at 0x0000021BE6D36800 (otid=0x0000021BE0949E30) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 185, in greenlet_spawn
    value = await result
                  └ <coroutine object Cursor.execute at 0x0000021BE6CF74C0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
          │    │        │    │       │        │    └ ()
          │    │        │    │       │        └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
          │    │        │    │       └ <method 'execute' of 'sqlite3.Cursor' objects>
          │    │        │    └ <sqlite3.Cursor object at 0x0000021BE6D03BC0>
          │    │        └ <aiosqlite.cursor.Cursor object at 0x0000021BE3CAE8D0>
          │    └ <function Cursor._execute at 0x0000021BE48E3420>
          └ <aiosqlite.cursor.Cursor object at 0x0000021BE3CAE8D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
                 │    │     │        │    │       └ {}
                 │    │     │        │    └ ('SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"', ())
                 │    │     │        └ <built-in method execute of sqlite3.Cursor object at 0x0000021BE6D03BC0>
                 │    │     └ <function Connection._execute at 0x0000021BE49185E0>
                 │    └ <Connection(Thread-2, stopped daemon 6600)>
                 └ <aiosqlite.cursor.Cursor object at 0x0000021BE3CAE8D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
                 └ <Future finished exception=OperationalError('no such table: 2000000041')>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             └ functools.partial(<built-in method close of sqlite3.Connection object at 0x0000021BE6D39F30>)

sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: 2000000041
[SQL: SELECT "2000000041"."key", "2000000041".val 
FROM "2000000041"]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2023-09-02T16:11:24.452177+0700 - ERROR - (sqlite3.OperationalError) no such table: 2000000041
[SQL: SELECT "2000000041"."key", "2000000041".val 
FROM "2000000041"]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1965, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x0000021BE17A18A0>
    │    └ <sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite object at 0x0000021BE4933690>
    └ <sqlalchemy.engine.base.Connection object at 0x0000021BE7206850>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\default.py", line 921, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ ()
    │      │       └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
    │      └ <function AsyncAdapt_aiosqlite_cursor.execute at 0x0000021BE48E0A40>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6CD3FA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 113, in execute
    self._adapt_connection._handle_exception(error)
    │    └ <member '_adapt_connection' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6CD3FA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 263, in _handle_exception
    raise error
          └ OperationalError('no such table: 2000000041')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 95, in execute
    self.await_(_cursor.execute(operation, parameters))
    │    │      │       │       │          └ ()
    │    │      │       │       └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
    │    │      │       └ <function Cursor.execute at 0x0000021BE48E34C0>
    │    │      └ <aiosqlite.cursor.Cursor object at 0x0000021BE6D34810>
    │    └ <member 'await_' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6CD3FA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 125, in await_only
    return current.driver.switch(awaitable)  # type: ignore[no-any-return]
           │                     └ <coroutine object Cursor.execute at 0x0000021BE6D3B4C0>
           └ <_AsyncIoGreenlet object at 0x0000021BE7206800 (otid=0x0000021BE0949E30) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 185, in greenlet_spawn
    value = await result
                  └ <coroutine object Cursor.execute at 0x0000021BE6D3B4C0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
          │    │        │    │       │        │    └ ()
          │    │        │    │       │        └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
          │    │        │    │       └ <method 'execute' of 'sqlite3.Cursor' objects>
          │    │        │    └ <sqlite3.Cursor object at 0x0000021BE71FB8C0>
          │    │        └ <aiosqlite.cursor.Cursor object at 0x0000021BE6D34810>
          │    └ <function Cursor._execute at 0x0000021BE48E3420>
          └ <aiosqlite.cursor.Cursor object at 0x0000021BE6D34810>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
                 │    │     │        │    │       └ {}
                 │    │     │        │    └ ('SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"', ())
                 │    │     │        └ <built-in method execute of sqlite3.Cursor object at 0x0000021BE71FB8C0>
                 │    │     └ <function Connection._execute at 0x0000021BE49185E0>
                 │    └ <Connection(Thread-3, stopped daemon 7832)>
                 └ <aiosqlite.cursor.Cursor object at 0x0000021BE6D34810>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
                 └ <Future finished exception=OperationalError('no such table: 2000000041')>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             └ functools.partial(<built-in method close of sqlite3.Connection object at 0x0000021BE6D3B2E0>)

sqlite3.OperationalError: no such table: 2000000041


The above exception was the direct cause of the following exception:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 57, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x0000021BE4332F20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x0000021BE6C3CD50>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x0000021BE4B30F40>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x0000021BE6C3CD50>
    │    │            └ <function LoopWrapper.run_forever at 0x0000021BE5170860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x0000021BE6C3CF10>
    └ <vkbottle.framework.bot.bot.Bot object at 0x0000021BE6C3CD50>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x0000021BE05C9760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x0000021BE01013A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x0000021BDE89F9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x0000021BE6C3D310>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x0000021BE6C3D4D0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'd21c639b59d18a3be3187c559d4d17eef44e9dec', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x0000021BE50DF4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[MessagesMessageAttachment(audio=None, audio_message=MessagesAudioM...
                             │       └ <function FromFuncHandler.handle at 0x0000021BE50DC360>
                             └ <FromFuncHandler words_handler blocking=False rules=(<AndRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[MessagesMessageAttachment(audio=None, audio_message=MessagesAudioM...
                 │    └ <function words_handler at 0x0000021BE6CDB6A0>
                 └ <FromFuncHandler words_handler blocking=False rules=(<AndRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\template_response_handler.py", line 17, in words_handler
    words_BD = await DBexec(wordsDB,select(tw.c.key,tw.c.val)).dbselect()  #f"SELECT key,val FROM '{peerID}' "
                     │      │       │      │  │     │  └ <sqlalchemy.sql.base.ReadOnlyColumnCollection object at 0x0000021BE416E9D0>
                     │      │       │      │  │     └ Table('2000000041', MetaData(), Column('id', Integer(), table=<2000000041>, primary_key=True, nullable=False), Column('key', ...
                     │      │       │      │  └ <sqlalchemy.sql.base.ReadOnlyColumnCollection object at 0x0000021BE416E9D0>
                     │      │       │      └ Table('2000000041', MetaData(), Column('id', Integer(), table=<2000000041>, primary_key=True, nullable=False), Column('key', ...
                     │      │       └ <function select at 0x0000021BE1681BC0>
                     │      └ <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x0000021BE4933600>
                     └ <class 'database_module.Tables.DBexec'>

  File "c:\k\project\PycharmProjects\bot2\database_module\Tables.py", line 112, in dbselect
    result = (await s.execute(self.query)).fetchall()
                    │ │       │    └ <sqlalchemy.sql.selectable.Select object at 0x0000021BE6D27DD0>
                    │ │       └ <database_module.Tables.DBexec object at 0x0000021BE6D23CD0>
                    │ └ <function AsyncSession.execute at 0x0000021BE228D4E0>
                    └ <sqlalchemy.orm.session.AsyncSession object at 0x0000021BE71EEF10>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 454, in execute
    result = await greenlet_spawn(
                   └ <function greenlet_spawn at 0x0000021BE09B4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 190, in greenlet_spawn
    result = context.throw(*sys.exc_info())
             │       │      │   └ <built-in function exc_info>
             │       │      └ <module 'sys' (built-in)>
             │       └ <method 'throw' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x0000021BE7206800 (otid=0x0000021BE0949E30) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2262, in execute
    return self._execute_internal(
           │    └ <function Session._execute_internal at 0x0000021BE42520C0>
           └ <sqlalchemy.orm.session.Session object at 0x0000021BE4BAF490>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2153, in _execute_internal
    result = conn.execute(
             │    └ <function Connection.execute at 0x0000021BE16D6520>
             └ <sqlalchemy.engine.base.Connection object at 0x0000021BE7206850>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1412, in execute
    return meth(
           └ <bound method ClauseElement._execute_on_connection of <sqlalchemy.sql.selectable.Select object at 0x0000021BE6D27DD0>>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           │          └ <function Connection._execute_clauseelement at 0x0000021BE16D6840>
           └ <sqlalchemy.engine.base.Connection object at 0x0000021BE7206850>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1635, in _execute_clauseelement
    ret = self._execute_context(
          │    └ <function Connection._execute_context at 0x0000021BE16D6A20>
          └ <sqlalchemy.engine.base.Connection object at 0x0000021BE7206850>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1844, in _execute_context
    return self._exec_single_context(
           │    └ <function Connection._exec_single_context at 0x0000021BE16D6AC0>
           └ <sqlalchemy.engine.base.Connection object at 0x0000021BE7206850>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1984, in _exec_single_context
    self._handle_dbapi_exception(
    │    └ <function Connection._handle_dbapi_exception at 0x0000021BE16D6D40>
    └ <sqlalchemy.engine.base.Connection object at 0x0000021BE7206850>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 2339, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
          │                    │              │                 └ OperationalError('no such table: 2000000041')
          │                    │              └ (<class 'sqlite3.OperationalError'>, OperationalError('no such table: 2000000041'), <traceback object at 0x0000021BE7204880>)
          │                    └ <method 'with_traceback' of 'BaseException' objects>
          └ OperationalError('(sqlite3.OperationalError) no such table: 2000000041')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1965, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x0000021BE17A18A0>
    │    └ <sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite object at 0x0000021BE4933690>
    └ <sqlalchemy.engine.base.Connection object at 0x0000021BE7206850>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\default.py", line 921, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ ()
    │      │       └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
    │      └ <function AsyncAdapt_aiosqlite_cursor.execute at 0x0000021BE48E0A40>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6CD3FA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 113, in execute
    self._adapt_connection._handle_exception(error)
    │    └ <member '_adapt_connection' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6CD3FA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 263, in _handle_exception
    raise error
          └ OperationalError('no such table: 2000000041')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 95, in execute
    self.await_(_cursor.execute(operation, parameters))
    │    │      │       │       │          └ ()
    │    │      │       │       └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
    │    │      │       └ <function Cursor.execute at 0x0000021BE48E34C0>
    │    │      └ <aiosqlite.cursor.Cursor object at 0x0000021BE6D34810>
    │    └ <member 'await_' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6CD3FA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 125, in await_only
    return current.driver.switch(awaitable)  # type: ignore[no-any-return]
           │                     └ <coroutine object Cursor.execute at 0x0000021BE6D3B4C0>
           └ <_AsyncIoGreenlet object at 0x0000021BE7206800 (otid=0x0000021BE0949E30) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 185, in greenlet_spawn
    value = await result
                  └ <coroutine object Cursor.execute at 0x0000021BE6D3B4C0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
          │    │        │    │       │        │    └ ()
          │    │        │    │       │        └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
          │    │        │    │       └ <method 'execute' of 'sqlite3.Cursor' objects>
          │    │        │    └ <sqlite3.Cursor object at 0x0000021BE71FB8C0>
          │    │        └ <aiosqlite.cursor.Cursor object at 0x0000021BE6D34810>
          │    └ <function Cursor._execute at 0x0000021BE48E3420>
          └ <aiosqlite.cursor.Cursor object at 0x0000021BE6D34810>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
                 │    │     │        │    │       └ {}
                 │    │     │        │    └ ('SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"', ())
                 │    │     │        └ <built-in method execute of sqlite3.Cursor object at 0x0000021BE71FB8C0>
                 │    │     └ <function Connection._execute at 0x0000021BE49185E0>
                 │    └ <Connection(Thread-3, stopped daemon 7832)>
                 └ <aiosqlite.cursor.Cursor object at 0x0000021BE6D34810>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
                 └ <Future finished exception=OperationalError('no such table: 2000000041')>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             └ functools.partial(<built-in method close of sqlite3.Connection object at 0x0000021BE6D3B2E0>)

sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: 2000000041
[SQL: SELECT "2000000041"."key", "2000000041".val 
FROM "2000000041"]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2023-09-02T16:11:39.246376+0700 - ERROR - (sqlite3.OperationalError) no such table: 2000000041
[SQL: SELECT "2000000041"."key", "2000000041".val 
FROM "2000000041"]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1965, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x0000021BE17A18A0>
    │    └ <sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite object at 0x0000021BE4933690>
    └ <sqlalchemy.engine.base.Connection object at 0x0000021BE7221910>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\default.py", line 921, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ ()
    │      │       └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
    │      └ <function AsyncAdapt_aiosqlite_cursor.execute at 0x0000021BE48E0A40>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE71FEDA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 113, in execute
    self._adapt_connection._handle_exception(error)
    │    └ <member '_adapt_connection' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE71FEDA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 263, in _handle_exception
    raise error
          └ OperationalError('no such table: 2000000041')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 95, in execute
    self.await_(_cursor.execute(operation, parameters))
    │    │      │       │       │          └ ()
    │    │      │       │       └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
    │    │      │       └ <function Cursor.execute at 0x0000021BE48E34C0>
    │    │      └ <aiosqlite.cursor.Cursor object at 0x0000021BE7205A10>
    │    └ <member 'await_' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE71FEDA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 125, in await_only
    return current.driver.switch(awaitable)  # type: ignore[no-any-return]
           │                     └ <coroutine object Cursor.execute at 0x0000021BE72246D0>
           └ <_AsyncIoGreenlet object at 0x0000021BE72218C0 (otid=0x0000021BE0949E30) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 185, in greenlet_spawn
    value = await result
                  └ <coroutine object Cursor.execute at 0x0000021BE72246D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
          │    │        │    │       │        │    └ ()
          │    │        │    │       │        └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
          │    │        │    │       └ <method 'execute' of 'sqlite3.Cursor' objects>
          │    │        │    └ <sqlite3.Cursor object at 0x0000021BE7218640>
          │    │        └ <aiosqlite.cursor.Cursor object at 0x0000021BE7205A10>
          │    └ <function Cursor._execute at 0x0000021BE48E3420>
          └ <aiosqlite.cursor.Cursor object at 0x0000021BE7205A10>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
                 │    │     │        │    │       └ {}
                 │    │     │        │    └ ('SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"', ())
                 │    │     │        └ <built-in method execute of sqlite3.Cursor object at 0x0000021BE7218640>
                 │    │     └ <function Connection._execute at 0x0000021BE49185E0>
                 │    └ <Connection(Thread-4, stopped daemon 7664)>
                 └ <aiosqlite.cursor.Cursor object at 0x0000021BE7205A10>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
                 └ <Future finished exception=OperationalError('no such table: 2000000041')>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             └ functools.partial(<built-in method close of sqlite3.Connection object at 0x0000021BE7224400>)

sqlite3.OperationalError: no such table: 2000000041


The above exception was the direct cause of the following exception:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 57, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x0000021BE4332F20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x0000021BE6C3CD50>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x0000021BE4B30F40>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x0000021BE6C3CD50>
    │    │            └ <function LoopWrapper.run_forever at 0x0000021BE5170860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x0000021BE6C3CF10>
    └ <vkbottle.framework.bot.bot.Bot object at 0x0000021BE6C3CD50>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x0000021BE05C9760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x0000021BE01013A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x0000021BDE89F9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x0000021BE6C3D310>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x0000021BE6C3D4D0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'bcda5883b41d5c3c377ced60016dc5d60383aeb8', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x0000021BE50DF4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[MessagesMessageAttachment(audio=None, audio_message=MessagesAudioM...
                             │       └ <function FromFuncHandler.handle at 0x0000021BE50DC360>
                             └ <FromFuncHandler words_handler blocking=False rules=(<AndRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[MessagesMessageAttachment(audio=None, audio_message=MessagesAudioM...
                 │    └ <function words_handler at 0x0000021BE6CDB6A0>
                 └ <FromFuncHandler words_handler blocking=False rules=(<AndRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\template_response_handler.py", line 17, in words_handler
    words_BD = await DBexec(wordsDB,select(tw.c.key,tw.c.val)).dbselect()  #f"SELECT key,val FROM '{peerID}' "
                     │      │       │      │  │     │  └ <sqlalchemy.sql.base.ReadOnlyColumnCollection object at 0x0000021BE416E9D0>
                     │      │       │      │  │     └ Table('2000000041', MetaData(), Column('id', Integer(), table=<2000000041>, primary_key=True, nullable=False), Column('key', ...
                     │      │       │      │  └ <sqlalchemy.sql.base.ReadOnlyColumnCollection object at 0x0000021BE416E9D0>
                     │      │       │      └ Table('2000000041', MetaData(), Column('id', Integer(), table=<2000000041>, primary_key=True, nullable=False), Column('key', ...
                     │      │       └ <function select at 0x0000021BE1681BC0>
                     │      └ <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x0000021BE4933600>
                     └ <class 'database_module.Tables.DBexec'>

  File "c:\k\project\PycharmProjects\bot2\database_module\Tables.py", line 112, in dbselect
    result = (await s.execute(self.query)).fetchall()
                    │ │       │    └ <sqlalchemy.sql.selectable.Select object at 0x0000021BE6D27B10>
                    │ │       └ <database_module.Tables.DBexec object at 0x0000021BE6CFC950>
                    │ └ <function AsyncSession.execute at 0x0000021BE228D4E0>
                    └ <sqlalchemy.orm.session.AsyncSession object at 0x0000021BE7220A10>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 454, in execute
    result = await greenlet_spawn(
                   └ <function greenlet_spawn at 0x0000021BE09B4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 190, in greenlet_spawn
    result = context.throw(*sys.exc_info())
             │       │      │   └ <built-in function exc_info>
             │       │      └ <module 'sys' (built-in)>
             │       └ <method 'throw' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x0000021BE72218C0 (otid=0x0000021BE0949E30) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2262, in execute
    return self._execute_internal(
           │    └ <function Session._execute_internal at 0x0000021BE42520C0>
           └ <sqlalchemy.orm.session.Session object at 0x0000021BE72209D0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2153, in _execute_internal
    result = conn.execute(
             │    └ <function Connection.execute at 0x0000021BE16D6520>
             └ <sqlalchemy.engine.base.Connection object at 0x0000021BE7221910>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1412, in execute
    return meth(
           └ <bound method ClauseElement._execute_on_connection of <sqlalchemy.sql.selectable.Select object at 0x0000021BE6D27B10>>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           │          └ <function Connection._execute_clauseelement at 0x0000021BE16D6840>
           └ <sqlalchemy.engine.base.Connection object at 0x0000021BE7221910>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1635, in _execute_clauseelement
    ret = self._execute_context(
          │    └ <function Connection._execute_context at 0x0000021BE16D6A20>
          └ <sqlalchemy.engine.base.Connection object at 0x0000021BE7221910>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1844, in _execute_context
    return self._exec_single_context(
           │    └ <function Connection._exec_single_context at 0x0000021BE16D6AC0>
           └ <sqlalchemy.engine.base.Connection object at 0x0000021BE7221910>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1984, in _exec_single_context
    self._handle_dbapi_exception(
    │    └ <function Connection._handle_dbapi_exception at 0x0000021BE16D6D40>
    └ <sqlalchemy.engine.base.Connection object at 0x0000021BE7221910>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 2339, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
          │                    │              │                 └ OperationalError('no such table: 2000000041')
          │                    │              └ (<class 'sqlite3.OperationalError'>, OperationalError('no such table: 2000000041'), <traceback object at 0x0000021BE7222040>)
          │                    └ <method 'with_traceback' of 'BaseException' objects>
          └ OperationalError('(sqlite3.OperationalError) no such table: 2000000041')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1965, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x0000021BE17A18A0>
    │    └ <sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite object at 0x0000021BE4933690>
    └ <sqlalchemy.engine.base.Connection object at 0x0000021BE7221910>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\default.py", line 921, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ ()
    │      │       └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
    │      └ <function AsyncAdapt_aiosqlite_cursor.execute at 0x0000021BE48E0A40>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE71FEDA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 113, in execute
    self._adapt_connection._handle_exception(error)
    │    └ <member '_adapt_connection' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE71FEDA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 263, in _handle_exception
    raise error
          └ OperationalError('no such table: 2000000041')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 95, in execute
    self.await_(_cursor.execute(operation, parameters))
    │    │      │       │       │          └ ()
    │    │      │       │       └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
    │    │      │       └ <function Cursor.execute at 0x0000021BE48E34C0>
    │    │      └ <aiosqlite.cursor.Cursor object at 0x0000021BE7205A10>
    │    └ <member 'await_' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE71FEDA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 125, in await_only
    return current.driver.switch(awaitable)  # type: ignore[no-any-return]
           │                     └ <coroutine object Cursor.execute at 0x0000021BE72246D0>
           └ <_AsyncIoGreenlet object at 0x0000021BE72218C0 (otid=0x0000021BE0949E30) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 185, in greenlet_spawn
    value = await result
                  └ <coroutine object Cursor.execute at 0x0000021BE72246D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
          │    │        │    │       │        │    └ ()
          │    │        │    │       │        └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
          │    │        │    │       └ <method 'execute' of 'sqlite3.Cursor' objects>
          │    │        │    └ <sqlite3.Cursor object at 0x0000021BE7218640>
          │    │        └ <aiosqlite.cursor.Cursor object at 0x0000021BE7205A10>
          │    └ <function Cursor._execute at 0x0000021BE48E3420>
          └ <aiosqlite.cursor.Cursor object at 0x0000021BE7205A10>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
                 │    │     │        │    │       └ {}
                 │    │     │        │    └ ('SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"', ())
                 │    │     │        └ <built-in method execute of sqlite3.Cursor object at 0x0000021BE7218640>
                 │    │     └ <function Connection._execute at 0x0000021BE49185E0>
                 │    └ <Connection(Thread-4, stopped daemon 7664)>
                 └ <aiosqlite.cursor.Cursor object at 0x0000021BE7205A10>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
                 └ <Future finished exception=OperationalError('no such table: 2000000041')>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             └ functools.partial(<built-in method close of sqlite3.Connection object at 0x0000021BE7224400>)

sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: 2000000041
[SQL: SELECT "2000000041"."key", "2000000041".val 
FROM "2000000041"]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2023-09-02T16:12:10.890658+0700 - ERROR - (sqlite3.OperationalError) no such table: 2000000041
[SQL: SELECT "2000000041"."key", "2000000041".val 
FROM "2000000041"]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1965, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x0000021BE17A18A0>
    │    └ <sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite object at 0x0000021BE4933690>
    └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722D750>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\default.py", line 921, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ ()
    │      │       └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
    │      └ <function AsyncAdapt_aiosqlite_cursor.execute at 0x0000021BE48E0A40>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6D30040>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 113, in execute
    self._adapt_connection._handle_exception(error)
    │    └ <member '_adapt_connection' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6D30040>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 263, in _handle_exception
    raise error
          └ OperationalError('no such table: 2000000041')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 95, in execute
    self.await_(_cursor.execute(operation, parameters))
    │    │      │       │       │          └ ()
    │    │      │       │       └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
    │    │      │       └ <function Cursor.execute at 0x0000021BE48E34C0>
    │    │      └ <aiosqlite.cursor.Cursor object at 0x0000021BE722DC10>
    │    └ <member 'await_' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6D30040>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 125, in await_only
    return current.driver.switch(awaitable)  # type: ignore[no-any-return]
           │                     └ <coroutine object Cursor.execute at 0x0000021BE72255D0>
           └ <_AsyncIoGreenlet object at 0x0000021BE722D700 (otid=0x0000021BE0949E30) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 185, in greenlet_spawn
    value = await result
                  └ <coroutine object Cursor.execute at 0x0000021BE72255D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
          │    │        │    │       │        │    └ ()
          │    │        │    │       │        └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
          │    │        │    │       └ <method 'execute' of 'sqlite3.Cursor' objects>
          │    │        │    └ <sqlite3.Cursor object at 0x0000021BE7219540>
          │    │        └ <aiosqlite.cursor.Cursor object at 0x0000021BE722DC10>
          │    └ <function Cursor._execute at 0x0000021BE48E3420>
          └ <aiosqlite.cursor.Cursor object at 0x0000021BE722DC10>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
                 │    │     │        │    │       └ {}
                 │    │     │        │    └ ('SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"', ())
                 │    │     │        └ <built-in method execute of sqlite3.Cursor object at 0x0000021BE7219540>
                 │    │     └ <function Connection._execute at 0x0000021BE49185E0>
                 │    └ <Connection(Thread-5, stopped daemon 8780)>
                 └ <aiosqlite.cursor.Cursor object at 0x0000021BE722DC10>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
                 └ <Future finished exception=OperationalError('no such table: 2000000041')>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             └ functools.partial(<built-in method close of sqlite3.Connection object at 0x0000021BE7225300>)

sqlite3.OperationalError: no such table: 2000000041


The above exception was the direct cause of the following exception:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 57, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x0000021BE4332F20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x0000021BE6C3CD50>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x0000021BE4B30F40>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x0000021BE6C3CD50>
    │    │            └ <function LoopWrapper.run_forever at 0x0000021BE5170860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x0000021BE6C3CF10>
    └ <vkbottle.framework.bot.bot.Bot object at 0x0000021BE6C3CD50>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x0000021BE05C9760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x0000021BE01013A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x0000021BDE89F9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x0000021BE6C3D310>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x0000021BE6C3D4D0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'f0b397ee210c307bf807775232a363dbf6de9ad5', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x0000021BE50DF4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[MessagesMessageAttachment(audio=None, audio_message=MessagesAudioM...
                             │       └ <function FromFuncHandler.handle at 0x0000021BE50DC360>
                             └ <FromFuncHandler words_handler blocking=False rules=(<AndRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[MessagesMessageAttachment(audio=None, audio_message=MessagesAudioM...
                 │    └ <function words_handler at 0x0000021BE6CDB6A0>
                 └ <FromFuncHandler words_handler blocking=False rules=(<AndRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\template_response_handler.py", line 17, in words_handler
    words_BD = await DBexec(wordsDB,select(tw.c.key,tw.c.val)).dbselect()  #f"SELECT key,val FROM '{peerID}' "
                     │      │       │      │  │     │  └ <sqlalchemy.sql.base.ReadOnlyColumnCollection object at 0x0000021BE416E9D0>
                     │      │       │      │  │     └ Table('2000000041', MetaData(), Column('id', Integer(), table=<2000000041>, primary_key=True, nullable=False), Column('key', ...
                     │      │       │      │  └ <sqlalchemy.sql.base.ReadOnlyColumnCollection object at 0x0000021BE416E9D0>
                     │      │       │      └ Table('2000000041', MetaData(), Column('id', Integer(), table=<2000000041>, primary_key=True, nullable=False), Column('key', ...
                     │      │       └ <function select at 0x0000021BE1681BC0>
                     │      └ <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x0000021BE4933600>
                     └ <class 'database_module.Tables.DBexec'>

  File "c:\k\project\PycharmProjects\bot2\database_module\Tables.py", line 112, in dbselect
    result = (await s.execute(self.query)).fetchall()
                    │ │       │    └ <sqlalchemy.sql.selectable.Select object at 0x0000021BE6D27950>
                    │ │       └ <database_module.Tables.DBexec object at 0x0000021BE72234D0>
                    │ └ <function AsyncSession.execute at 0x0000021BE228D4E0>
                    └ <sqlalchemy.orm.session.AsyncSession object at 0x0000021BE722C550>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\session.py", line 454, in execute
    result = await greenlet_spawn(
                   └ <function greenlet_spawn at 0x0000021BE09B4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 190, in greenlet_spawn
    result = context.throw(*sys.exc_info())
             │       │      │   └ <built-in function exc_info>
             │       │      └ <module 'sys' (built-in)>
             │       └ <method 'throw' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x0000021BE722D700 (otid=0x0000021BE0949E30) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2262, in execute
    return self._execute_internal(
           │    └ <function Session._execute_internal at 0x0000021BE42520C0>
           └ <sqlalchemy.orm.session.Session object at 0x0000021BE722CE50>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\orm\session.py", line 2153, in _execute_internal
    result = conn.execute(
             │    └ <function Connection.execute at 0x0000021BE16D6520>
             └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722D750>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1412, in execute
    return meth(
           └ <bound method ClauseElement._execute_on_connection of <sqlalchemy.sql.selectable.Select object at 0x0000021BE6D27950>>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\elements.py", line 515, in _execute_on_connection
    return connection._execute_clauseelement(
           │          └ <function Connection._execute_clauseelement at 0x0000021BE16D6840>
           └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722D750>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1635, in _execute_clauseelement
    ret = self._execute_context(
          │    └ <function Connection._execute_context at 0x0000021BE16D6A20>
          └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722D750>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1844, in _execute_context
    return self._exec_single_context(
           │    └ <function Connection._exec_single_context at 0x0000021BE16D6AC0>
           └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722D750>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1984, in _exec_single_context
    self._handle_dbapi_exception(
    │    └ <function Connection._handle_dbapi_exception at 0x0000021BE16D6D40>
    └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722D750>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 2339, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
          │                    │              │                 └ OperationalError('no such table: 2000000041')
          │                    │              └ (<class 'sqlite3.OperationalError'>, OperationalError('no such table: 2000000041'), <traceback object at 0x0000021BE722DEC0>)
          │                    └ <method 'with_traceback' of 'BaseException' objects>
          └ OperationalError('(sqlite3.OperationalError) no such table: 2000000041')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1965, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x0000021BE17A18A0>
    │    └ <sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite object at 0x0000021BE4933690>
    └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722D750>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\default.py", line 921, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ ()
    │      │       └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
    │      └ <function AsyncAdapt_aiosqlite_cursor.execute at 0x0000021BE48E0A40>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6D30040>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 113, in execute
    self._adapt_connection._handle_exception(error)
    │    └ <member '_adapt_connection' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6D30040>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 263, in _handle_exception
    raise error
          └ OperationalError('no such table: 2000000041')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 95, in execute
    self.await_(_cursor.execute(operation, parameters))
    │    │      │       │       │          └ ()
    │    │      │       │       └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
    │    │      │       └ <function Cursor.execute at 0x0000021BE48E34C0>
    │    │      └ <aiosqlite.cursor.Cursor object at 0x0000021BE722DC10>
    │    └ <member 'await_' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE6D30040>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 125, in await_only
    return current.driver.switch(awaitable)  # type: ignore[no-any-return]
           │                     └ <coroutine object Cursor.execute at 0x0000021BE72255D0>
           └ <_AsyncIoGreenlet object at 0x0000021BE722D700 (otid=0x0000021BE0949E30) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 185, in greenlet_spawn
    value = await result
                  └ <coroutine object Cursor.execute at 0x0000021BE72255D0>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
          │    │        │    │       │        │    └ ()
          │    │        │    │       │        └ 'SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"'
          │    │        │    │       └ <method 'execute' of 'sqlite3.Cursor' objects>
          │    │        │    └ <sqlite3.Cursor object at 0x0000021BE7219540>
          │    │        └ <aiosqlite.cursor.Cursor object at 0x0000021BE722DC10>
          │    └ <function Cursor._execute at 0x0000021BE48E3420>
          └ <aiosqlite.cursor.Cursor object at 0x0000021BE722DC10>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
                 │    │     │        │    │       └ {}
                 │    │     │        │    └ ('SELECT "2000000041"."key", "2000000041".val \nFROM "2000000041"', ())
                 │    │     │        └ <built-in method execute of sqlite3.Cursor object at 0x0000021BE7219540>
                 │    │     └ <function Connection._execute at 0x0000021BE49185E0>
                 │    └ <Connection(Thread-5, stopped daemon 8780)>
                 └ <aiosqlite.cursor.Cursor object at 0x0000021BE722DC10>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
                 └ <Future finished exception=OperationalError('no such table: 2000000041')>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             └ functools.partial(<built-in method close of sqlite3.Connection object at 0x0000021BE7225300>)

sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: 2000000041
[SQL: SELECT "2000000041"."key", "2000000041".val 
FROM "2000000041"]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2023-09-02T16:22:28.868326+0700 - ERROR - (sqlite3.OperationalError) table "2000000041" already exists
[SQL: 
CREATE TABLE "2000000041" (
	id INTEGER NOT NULL, 
	"key" TEXT, 
	val TEXT, 
	PRIMARY KEY (id)
)

]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
Traceback (most recent call last):

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1965, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x0000021BE17A18A0>
    │    └ <sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite object at 0x0000021BE4933690>
    └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722F210>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\default.py", line 921, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ ()
    │      │       └ '\nCREATE TABLE "2000000041" (\n\tid INTEGER NOT NULL, \n\t"key" TEXT, \n\tval TEXT, \n\tPRIMARY KEY (id)\n)\n\n'
    │      └ <function AsyncAdapt_aiosqlite_cursor.execute at 0x0000021BE48E0A40>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE7240220>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 113, in execute
    self._adapt_connection._handle_exception(error)
    │    └ <member '_adapt_connection' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE7240220>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 263, in _handle_exception
    raise error
          └ OperationalError('table "2000000041" already exists')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 95, in execute
    self.await_(_cursor.execute(operation, parameters))
    │    │      │       │       │          └ ()
    │    │      │       │       └ '\nCREATE TABLE "2000000041" (\n\tid INTEGER NOT NULL, \n\t"key" TEXT, \n\tval TEXT, \n\tPRIMARY KEY (id)\n)\n\n'
    │    │      │       └ <function Cursor.execute at 0x0000021BE48E34C0>
    │    │      └ <aiosqlite.cursor.Cursor object at 0x0000021BE7207F90>
    │    └ <member 'await_' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE7240220>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 125, in await_only
    return current.driver.switch(awaitable)  # type: ignore[no-any-return]
           │                     └ <coroutine object Cursor.execute at 0x0000021BE6D3AB60>
           └ <_AsyncIoGreenlet object at 0x0000021BE722D8C0 (otid=0x0000021BE0949E30) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 185, in greenlet_spawn
    value = await result
                  └ <coroutine object Cursor.execute at 0x0000021BE6D3AB60>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
          │    │        │    │       │        │    └ ()
          │    │        │    │       │        └ '\nCREATE TABLE "2000000041" (\n\tid INTEGER NOT NULL, \n\t"key" TEXT, \n\tval TEXT, \n\tPRIMARY KEY (id)\n)\n\n'
          │    │        │    │       └ <method 'execute' of 'sqlite3.Cursor' objects>
          │    │        │    └ <sqlite3.Cursor object at 0x0000021BE7218DC0>
          │    │        └ <aiosqlite.cursor.Cursor object at 0x0000021BE7207F90>
          │    └ <function Cursor._execute at 0x0000021BE48E3420>
          └ <aiosqlite.cursor.Cursor object at 0x0000021BE7207F90>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
                 │    │     │        │    │       └ {}
                 │    │     │        │    └ ('\nCREATE TABLE "2000000041" (\n\tid INTEGER NOT NULL, \n\t"key" TEXT, \n\tval TEXT, \n\tPRIMARY KEY (id)\n)\n\n', ())
                 │    │     │        └ <built-in method execute of sqlite3.Cursor object at 0x0000021BE7218DC0>
                 │    │     └ <function Connection._execute at 0x0000021BE49185E0>
                 │    └ <Connection(Thread-7, stopped daemon 4892)>
                 └ <aiosqlite.cursor.Cursor object at 0x0000021BE7207F90>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
                 └ <Future finished exception=OperationalError('table "2000000041" already exists')>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             └ functools.partial(<built-in method close of sqlite3.Connection object at 0x0000021BE7226A70>)

sqlite3.OperationalError: table "2000000041" already exists


The above exception was the direct cause of the following exception:


Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 57, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x0000021BE4332F20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x0000021BE6C3CD50>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x0000021BE4B30F40>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x0000021BE6C3CD50>
    │    │            └ <function LoopWrapper.run_forever at 0x0000021BE5170860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x0000021BE6C3CF10>
    └ <vkbottle.framework.bot.bot.Bot object at 0x0000021BE6C3CD50>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x0000021BE05C9760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x0000021BE01013A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x0000021BDE89F9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x0000021BE6C3D310>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x0000021BE6C3D4D0>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'a5b4c9e40621a637f63608f87b96afad66b860ea', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x0000021BE50DF4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101587, date=1693646796, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x0000021BE50DC360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101587, date=1693646796, deleted=None, ...
                 │    └ <function bot at 0x0000021BE6CDA980>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 25, in bot
    await create_peer_table(peer=peerID)
          │                      └ 2000000041
          └ <function create_peer_table at 0x0000021BE48DC360>

  File "c:\k\project\PycharmProjects\bot2\database_module\Tables.py", line 96, in create_peer_table
    async with wordsDB.begin() as connect: await connect.run_sync(mdW.metadata.create_all)
               │       │          │              │       │        │   │        └ <function MetaData.create_all at 0x0000021BE1606660>
               │       │          │              │       │        │   └ MetaData()
               │       │          │              │       │        └ Table('2000000041', MetaData(), Column('id', Integer(), table=<2000000041>, primary_key=True, nullable=False), Column('key', ...
               │       │          │              │       └ <function AsyncConnection.run_sync at 0x0000021BE4B35EE0>
               │       │          │              └ <sqlalchemy.ext.asyncio.engine.AsyncConnection object at 0x0000021BE40488B0>
               │       │          └ <sqlalchemy.ext.asyncio.engine.AsyncConnection object at 0x0000021BE40488B0>
               │       └ <function AsyncEngine.begin at 0x0000021BE4B367A0>
               └ <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x0000021BE4933600>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\ext\asyncio\engine.py", line 884, in run_sync
    return await greenlet_spawn(fn, self._proxied, *arg, **kw)
                 │              │   │    │          │      └ {}
                 │              │   │    │          └ ()
                 │              │   │    └ <sqlalchemy.util.langhelpers._non_memoized_property object at 0x0000021BE5272990>
                 │              │   └ <sqlalchemy.ext.asyncio.engine.AsyncConnection object at 0x0000021BE40488B0>
                 │              └ <bound method MetaData.create_all of MetaData()>
                 └ <function greenlet_spawn at 0x0000021BE09B4EA0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 190, in greenlet_spawn
    result = context.throw(*sys.exc_info())
             │       │      │   └ <built-in function exc_info>
             │       │      └ <module 'sys' (built-in)>
             │       └ <method 'throw' of 'greenlet.greenlet' objects>
             └ <_AsyncIoGreenlet object at 0x0000021BE722D8C0 (otid=0x0000021BE0949E30) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\schema.py", line 5822, in create_all
    bind._run_ddl_visitor(
    │    └ <function Connection._run_ddl_visitor at 0x0000021BE16D6E80>
    └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722F210>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 2443, in _run_ddl_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
    │               │    │        │       │                       └ MetaData()
    │               │    │        │       └ {'checkfirst': True, 'tables': None}
    │               │    │        └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722F210>
    │               │    └ <sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite object at 0x0000021BE4933690>
    │               └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722F210>
    └ <class 'sqlalchemy.sql.ddl.SchemaGenerator'>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\visitors.py", line 670, in traverse_single
    return meth(obj, **kw)
           │    │      └ {}
           │    └ MetaData()
           └ <bound method SchemaGenerator.visit_metadata of <sqlalchemy.sql.ddl.SchemaGenerator object at 0x0000021BE47F78E0>>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\ddl.py", line 922, in visit_metadata
    self.traverse_single(
    │    └ <function ExternalTraversal.traverse_single at 0x0000021BE0ABA2A0>
    └ <sqlalchemy.sql.ddl.SchemaGenerator object at 0x0000021BE47F78E0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\visitors.py", line 670, in traverse_single
    return meth(obj, **kw)
           │    │      └ {'create_ok': True, 'include_foreign_key_constraints': set(), '_is_metadata_operation': True}
           │    └ Table('2000000041', MetaData(), Column('id', Integer(), table=<2000000041>, primary_key=True, nullable=False), Column('key', ...
           └ <bound method SchemaGenerator.visit_table of <sqlalchemy.sql.ddl.SchemaGenerator object at 0x0000021BE47F78E0>>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\ddl.py", line 960, in visit_table
    )._invoke_with(self.connection)
                   │    └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722F210>
                   └ <sqlalchemy.sql.ddl.SchemaGenerator object at 0x0000021BE47F78E0>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\ddl.py", line 315, in _invoke_with
    return bind.execute(self)
           │    │       └ <sqlalchemy.sql.ddl.CreateTable object at 0x0000021BE722D0D0>
           │    └ <function Connection.execute at 0x0000021BE16D6520>
           └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722F210>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1412, in execute
    return meth(
           └ <bound method ExecutableDDLElement._execute_on_connection of <sqlalchemy.sql.ddl.CreateTable object at 0x0000021BE722D0D0>>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\ddl.py", line 181, in _execute_on_connection
    return connection._execute_ddl(
           │          └ <function Connection._execute_ddl at 0x0000021BE16D6700>
           └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722F210>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1524, in _execute_ddl
    ret = self._execute_context(
          │    └ <function Connection._execute_context at 0x0000021BE16D6A20>
          └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722F210>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1844, in _execute_context
    return self._exec_single_context(
           │    └ <function Connection._exec_single_context at 0x0000021BE16D6AC0>
           └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722F210>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1984, in _exec_single_context
    self._handle_dbapi_exception(
    │    └ <function Connection._handle_dbapi_exception at 0x0000021BE16D6D40>
    └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722F210>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 2339, in _handle_dbapi_exception
    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
          │                    │              │                 └ OperationalError('table "2000000041" already exists')
          │                    │              └ (<class 'sqlite3.OperationalError'>, OperationalError('table "2000000041" already exists'), <traceback object at 0x0000021BE7...
          │                    └ <method 'with_traceback' of 'BaseException' objects>
          └ OperationalError('(sqlite3.OperationalError) table "2000000041" already exists')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\base.py", line 1965, in _exec_single_context
    self.dialect.do_execute(
    │    │       └ <function DefaultDialect.do_execute at 0x0000021BE17A18A0>
    │    └ <sqlalchemy.dialects.sqlite.aiosqlite.SQLiteDialect_aiosqlite object at 0x0000021BE4933690>
    └ <sqlalchemy.engine.base.Connection object at 0x0000021BE722F210>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\engine\default.py", line 921, in do_execute
    cursor.execute(statement, parameters)
    │      │       │          └ ()
    │      │       └ '\nCREATE TABLE "2000000041" (\n\tid INTEGER NOT NULL, \n\t"key" TEXT, \n\tval TEXT, \n\tPRIMARY KEY (id)\n)\n\n'
    │      └ <function AsyncAdapt_aiosqlite_cursor.execute at 0x0000021BE48E0A40>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE7240220>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 113, in execute
    self._adapt_connection._handle_exception(error)
    │    └ <member '_adapt_connection' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE7240220>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 263, in _handle_exception
    raise error
          └ OperationalError('table "2000000041" already exists')
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\dialects\sqlite\aiosqlite.py", line 95, in execute
    self.await_(_cursor.execute(operation, parameters))
    │    │      │       │       │          └ ()
    │    │      │       │       └ '\nCREATE TABLE "2000000041" (\n\tid INTEGER NOT NULL, \n\t"key" TEXT, \n\tval TEXT, \n\tPRIMARY KEY (id)\n)\n\n'
    │    │      │       └ <function Cursor.execute at 0x0000021BE48E34C0>
    │    │      └ <aiosqlite.cursor.Cursor object at 0x0000021BE7207F90>
    │    └ <member 'await_' of 'AsyncAdapt_aiosqlite_cursor' objects>
    └ <sqlalchemy.dialects.sqlite.aiosqlite.AsyncAdapt_aiosqlite_cursor object at 0x0000021BE7240220>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 125, in await_only
    return current.driver.switch(awaitable)  # type: ignore[no-any-return]
           │                     └ <coroutine object Cursor.execute at 0x0000021BE6D3AB60>
           └ <_AsyncIoGreenlet object at 0x0000021BE722D8C0 (otid=0x0000021BE0949E30) dead>
  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\util\_concurrency_py3k.py", line 185, in greenlet_spawn
    value = await result
                  └ <coroutine object Cursor.execute at 0x0000021BE6D3AB60>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 48, in execute
    await self._execute(self._cursor.execute, sql, parameters)
          │    │        │    │       │        │    └ ()
          │    │        │    │       │        └ '\nCREATE TABLE "2000000041" (\n\tid INTEGER NOT NULL, \n\t"key" TEXT, \n\tval TEXT, \n\tPRIMARY KEY (id)\n)\n\n'
          │    │        │    │       └ <method 'execute' of 'sqlite3.Cursor' objects>
          │    │        │    └ <sqlite3.Cursor object at 0x0000021BE7218DC0>
          │    │        └ <aiosqlite.cursor.Cursor object at 0x0000021BE7207F90>
          │    └ <function Cursor._execute at 0x0000021BE48E3420>
          └ <aiosqlite.cursor.Cursor object at 0x0000021BE7207F90>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\cursor.py", line 40, in _execute
    return await self._conn._execute(fn, *args, **kwargs)
                 │    │     │        │    │       └ {}
                 │    │     │        │    └ ('\nCREATE TABLE "2000000041" (\n\tid INTEGER NOT NULL, \n\t"key" TEXT, \n\tval TEXT, \n\tPRIMARY KEY (id)\n)\n\n', ())
                 │    │     │        └ <built-in method execute of sqlite3.Cursor object at 0x0000021BE7218DC0>
                 │    │     └ <function Connection._execute at 0x0000021BE49185E0>
                 │    └ <Connection(Thread-7, stopped daemon 4892)>
                 └ <aiosqlite.cursor.Cursor object at 0x0000021BE7207F90>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 133, in _execute
    return await future
                 └ <Future finished exception=OperationalError('table "2000000041" already exists')>
  File "C:\Program Files\Python311\Lib\site-packages\aiosqlite\core.py", line 106, in run
    result = function()
             └ functools.partial(<built-in method close of sqlite3.Connection object at 0x0000021BE7226A70>)

sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) table "2000000041" already exists
[SQL: 
CREATE TABLE "2000000041" (
	id INTEGER NOT NULL, 
	"key" TEXT, 
	val TEXT, 
	PRIMARY KEY (id)
)

]
(Background on this error at: https://sqlalche.me/e/20/e3q8)
2023-09-02T16:44:57.500535+0700 - ERROR - MetaData.create_all() missing 1 required positional argument: 'bind'
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 57, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002DD71C7AF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002DD75034210>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002DD72E704F0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002DD75034210>
    │    │            └ <function LoopWrapper.run_forever at 0x000002DD734E0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002DD75034390>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002DD75034210>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002DD6E939760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000002DD6E4713A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000002DD6CC0F9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002DD75034790>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002DD75034950>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '92110c039dce0b0f2da362eb299c1ba3af7f5486', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002DD7344F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101599, date=1693648145, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000002DD7344C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101599, date=1693648145, deleted=None, ...
                 │    └ <function bot at 0x000002DD750CE980>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 25, in bot
    await create_peer_table(peer=peerID)
          │                      └ 2000000041
          └ <function create_peer_table at 0x000002DD72C9C360>

  File "c:\k\project\PycharmProjects\bot2\database_module\Tables.py", line 96, in create_peer_table
    async with wordsDB.begin() as connect: await connect.run_sync(mdW.metadata.create_all(checkfirst=True))
               │       │          │              │       │        │   │        └ <function MetaData.create_all at 0x000002DD6F976660>
               │       │          │              │       │        │   └ MetaData()
               │       │          │              │       │        └ Table('2000000041', MetaData(), Column('id', Integer(), table=<2000000041>, primary_key=True, nullable=False), Column('key', ...
               │       │          │              │       └ <function AsyncConnection.run_sync at 0x000002DD72BC9EE0>
               │       │          │              └ <sqlalchemy.ext.asyncio.engine.AsyncConnection object at 0x000002DD72C70810>
               │       │          └ <sqlalchemy.ext.asyncio.engine.AsyncConnection object at 0x000002DD72C70810>
               │       └ <function AsyncEngine.begin at 0x000002DD72BCA7A0>
               └ <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x000002DD72C634C0>

TypeError: MetaData.create_all() missing 1 required positional argument: 'bind'
2023-09-02T16:45:17.550894+0700 - ERROR - MetaData.create_all() missing 1 required positional argument: 'bind'
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 57, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x000002DD71C7AF20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002DD75034210>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x000002DD72E704F0>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x000002DD75034210>
    │    │            └ <function LoopWrapper.run_forever at 0x000002DD734E0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x000002DD75034390>
    └ <vkbottle.framework.bot.bot.Bot object at 0x000002DD75034210>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x000002DD6E939760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x000002DD6E4713A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x000002DD6CC0F9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x000002DD75034790>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x000002DD75034950>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': '0349d0f16a3ff74abbcaff08b09bff1b0759afc4', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x000002DD7344F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101600, date=1693648165, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x000002DD7344C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101600, date=1693648165, deleted=None, ...
                 │    └ <function bot at 0x000002DD750CE980>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 25, in bot
    await create_peer_table(peer=peerID)
          │                      └ 2000000041
          └ <function create_peer_table at 0x000002DD72C9C360>

  File "c:\k\project\PycharmProjects\bot2\database_module\Tables.py", line 96, in create_peer_table
    async with wordsDB.begin() as connect: await connect.run_sync(mdW.metadata.create_all(checkfirst=True))
               │       │          │              │       │        │   │        └ <function MetaData.create_all at 0x000002DD6F976660>
               │       │          │              │       │        │   └ MetaData()
               │       │          │              │       │        └ Table('2000000041', MetaData(), Column('id', Integer(), table=<2000000041>, primary_key=True, nullable=False), Column('key', ...
               │       │          │              │       └ <function AsyncConnection.run_sync at 0x000002DD72BC9EE0>
               │       │          │              └ <sqlalchemy.ext.asyncio.engine.AsyncConnection object at 0x000002DD72C71AD0>
               │       │          └ <sqlalchemy.ext.asyncio.engine.AsyncConnection object at 0x000002DD72C71AD0>
               │       └ <function AsyncEngine.begin at 0x000002DD72BCA7A0>
               └ <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x000002DD72C634C0>

TypeError: MetaData.create_all() missing 1 required positional argument: 'bind'
2023-09-02T16:47:01.081714+0700 - ERROR - 'AsyncEngine' object has no attribute '_run_ddl_visitor'
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 57, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x00000127FCF32F20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x00000127FF9248D0>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x00000127FD771F30>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x00000127FF9248D0>
    │    │            └ <function LoopWrapper.run_forever at 0x00000127FDDE0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x00000127FF924A90>
    └ <vkbottle.framework.bot.bot.Bot object at 0x00000127FF9248D0>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x00000127F9229760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x00000127F8D513A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x00000127F74BF9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x00000127FF924E50>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x00000127FF925050>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'f2be2ce7a244ada7a9833f186fa8e3b647ed449f', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x00000127FDD4F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101601, date=1693648269, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x00000127FDD4C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101601, date=1693648269, deleted=None, ...
                 │    └ <function bot at 0x00000127FF9BE980>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 25, in bot
    await create_peer_table(peer=peerID)
          │                      └ 2000000041
          └ <function create_peer_table at 0x00000127FC6A8360>

  File "c:\k\project\PycharmProjects\bot2\database_module\Tables.py", line 96, in create_peer_table
    async with wordsDB.begin() as connect: await connect.run_sync(mdW.metadata.create_all(bind=wordsDB,checkfirst=True))
               │       │          │              │       │        │   │        │               └ <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x00000127FC614100>
               │       │          │              │       │        │   │        └ <function MetaData.create_all at 0x00000127FA276660>
               │       │          │              │       │        │   └ MetaData()
               │       │          │              │       │        └ Table('2000000041', MetaData(), Column('id', Integer(), table=<2000000041>, primary_key=True, nullable=False), Column('key', ...
               │       │          │              │       └ <function AsyncConnection.run_sync at 0x00000127FD731EE0>
               │       │          │              └ <sqlalchemy.ext.asyncio.engine.AsyncConnection object at 0x00000127FD17DA30>
               │       │          └ <sqlalchemy.ext.asyncio.engine.AsyncConnection object at 0x00000127FD17DA30>
               │       └ <function AsyncEngine.begin at 0x00000127FD7327A0>
               └ <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x00000127FC614100>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\schema.py", line 5822, in create_all
    bind._run_ddl_visitor(
    └ <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x00000127FC614100>

AttributeError: 'AsyncEngine' object has no attribute '_run_ddl_visitor'
2023-09-02T16:47:02.265384+0700 - ERROR - 'AsyncEngine' object has no attribute '_run_ddl_visitor'
Traceback (most recent call last):

  File "c:\k\project\PycharmProjects\bot2\MAIN.py", line 57, in <module>
    vb.run_forever()
    │  └ <function Bot.run_forever at 0x00000127FCF32F20>
    └ <vkbottle.framework.bot.bot.Bot object at 0x00000127FF9248D0>

  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\framework\bot\bot.py", line 92, in run_forever
    self.loop_wrapper.run_forever(self.loop)
    │    │            │           │    └ <property object at 0x00000127FD771F30>
    │    │            │           └ <vkbottle.framework.bot.bot.Bot object at 0x00000127FF9248D0>
    │    │            └ <function LoopWrapper.run_forever at 0x00000127FDDE0860>
    │    └ <vkbottle.tools.dev.loop_wrapper.LoopWrapper object at 0x00000127FF924A90>
    └ <vkbottle.framework.bot.bot.Bot object at 0x00000127FF9248D0>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\tools\dev\loop_wrapper.py", line 50, in run_forever
    loop.run_forever()
    │    └ <function ProactorEventLoop.run_forever at 0x00000127F9229760>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\windows_events.py", line 321, in run_forever
    super().run_forever()
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 607, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x00000127F8D513A0>
    └ <ProactorEventLoop running=True closed=False debug=False>
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 1922, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x00000127F74BF9C0>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
  File "C:\Program Files\Python311\Lib\asyncio\events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle Task.task_wakeup(<Future finished result=None>)>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle Task.task_wakeup(<Future finished result=None>)>
> File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\base.py", line 22, in route
    await view.handle_event(event, ctx_api, self.state_dispenser)
          │    │            │      │        │    └ <vkbottle.dispatch.dispenser.builtin.BuiltinStateDispenser object at 0x00000127FF924E50>
          │    │            │      │        └ <vkbottle.dispatch.base.Router object at 0x00000127FF925050>
          │    │            │      └ <API token_generator=<<class 'vkbottle.api.token_generator.single.SingleTokenGenerator'>>...>
          │    │            └ {'group_id': 202960000, 'type': 'message_new', 'event_id': 'ca63956adf702e54ae4cf97f57f44e0c9ab7cbc9', 'v': '5.130', 'object'...
          │    └ <function ABCMessageView.handle_event at 0x00000127FDD4F4C0>
          └ <BotMessageView handlers=[<FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>, <FromFuncHandler words_handl...
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\views\abc\message.py", line 73, in handle_event
    handler_response = await handler.handle(message, **context_variables)
                             │       │      │          └ {}
                             │       │      └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101602, date=1693648269, deleted=None, ...
                             │       └ <function FromFuncHandler.handle at 0x00000127FDD4C360>
                             └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>
  File "C:\Program Files\Python311\Lib\site-packages\vkbottle\dispatch\handlers\from_func_handler.py", line 32, in handle
    return await self.handler(event, **acceptable_context)
                 │    │       │        └ {}
                 │    │       └ MessageMin(action=None, admin_author_id=None, attachments=[], conversation_message_id=101602, date=1693648269, deleted=None, ...
                 │    └ <function bot at 0x00000127FF9BE980>
                 └ <FromFuncHandler bot blocking=False rules=(<MessageNotCommandRule>,)>

  File "c:\k\project\PycharmProjects\bot2\handlers\message_new.py", line 25, in bot
    await create_peer_table(peer=peerID)
          │                      └ 2000000041
          └ <function create_peer_table at 0x00000127FC6A8360>

  File "c:\k\project\PycharmProjects\bot2\database_module\Tables.py", line 96, in create_peer_table
    async with wordsDB.begin() as connect: await connect.run_sync(mdW.metadata.create_all(bind=wordsDB,checkfirst=True))
               │       │          │              │       │        │   │        │               └ <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x00000127FC614100>
               │       │          │              │       │        │   │        └ <function MetaData.create_all at 0x00000127FA276660>
               │       │          │              │       │        │   └ MetaData()
               │       │          │              │       │        └ Table('2000000041', MetaData(), Column('id', Integer(), table=<2000000041>, primary_key=True, nullable=False), Column('key', ...
               │       │          │              │       └ <function AsyncConnection.run_sync at 0x00000127FD731EE0>
               │       │          │              └ <sqlalchemy.ext.asyncio.engine.AsyncConnection object at 0x00000127FCE9DAD0>
               │       │          └ <sqlalchemy.ext.asyncio.engine.AsyncConnection object at 0x00000127FCE9DAD0>
               │       └ <function AsyncEngine.begin at 0x00000127FD7327A0>
               └ <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x00000127FC614100>

  File "C:\Users\Алексей\AppData\Roaming\Python\Python311\site-packages\sqlalchemy\sql\schema.py", line 5822, in create_all
    bind._run_ddl_visitor(
    └ <sqlalchemy.ext.asyncio.engine.AsyncEngine object at 0x00000127FC614100>

AttributeError: 'AsyncEngine' object has no attribute '_run_ddl_visitor'
